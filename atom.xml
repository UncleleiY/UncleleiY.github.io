<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>诗意の理性</title>
  
  <subtitle>Uncle_yang&#39;s blog</subtitle>
  <link href="https://uncleleiy.github.io/atom.xml" rel="self"/>
  
  <link href="https://uncleleiy.github.io/"/>
  <updated>2023-07-10T06:01:40.107Z</updated>
  <id>https://uncleleiy.github.io/</id>
  
  <author>
    <name>Uncle_yang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Textbooks</title>
    <link href="https://uncleleiy.github.io/2023/07/02/blog-28-textbooks/"/>
    <id>https://uncleleiy.github.io/2023/07/02/blog-28-textbooks/</id>
    <published>2023-07-02T15:05:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><div class="row">    <embed src="/pdf/python.pdf" width="100%" height="550" type="application/pdf"></div><p><em>仅供学习参考，不作其他用途</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="textbooks" scheme="https://uncleleiy.github.io/categories/textbooks/"/>
    
    
    <category term="books" scheme="https://uncleleiy.github.io/tags/books/"/>
    
  </entry>
  
  <entry>
    <title>shell-vasp任务目录脚本</title>
    <link href="https://uncleleiy.github.io/2023/07/02/blog-25-shell-scripts/"/>
    <id>https://uncleleiy.github.io/2023/07/02/blog-25-shell-scripts/</id>
    <published>2023-07-02T08:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="vasp生成任务目录的脚本"><a href="#vasp生成任务目录的脚本" class="headerlink" title="vasp生成任务目录的脚本"></a>vasp生成任务目录的脚本</h1><pre><code class="hljs bash"><span class="hljs-meta">#!/usr/bin/env bash</span><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><span class="hljs-string">This script is used to make some new directories </span><span class="hljs-string">and then execute different calculation-tasks for you choose</span><span class="hljs-string">Now the following tasks can be executed: (scf) (dos) (band) </span><span class="hljs-string">&quot;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-function"><span class="hljs-title">function_scf</span></span>()&#123;<span class="hljs-built_in">mkdir</span> scf &amp;&amp; tar czvf chg.tgz CHG* &amp;&amp;<span class="hljs-built_in">cp</span> INCAR KPOINTS POSCAR OUTCAR chg.tgz scf/.&#125;<span class="hljs-function"><span class="hljs-title">function_dos</span></span>()&#123;<span class="hljs-built_in">mkdir</span> dos &amp;&amp;  <span class="hljs-built_in">cp</span> INCAR KPOINTS POSCAR OUTCAR DOSCAR dos/.&#125;<span class="hljs-function"><span class="hljs-title">function_band</span></span>()&#123;<span class="hljs-built_in">mkdir</span> band &amp;&amp;  <span class="hljs-built_in">cp</span> INCAR KPOINTS POSCAR OUTCAR EIGENVAL band/.&#125;<span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Please choose which kind of task you&#x27;re going to do: &quot;</span><span class="hljs-built_in">read</span> taska=scf b=dosc=band<span class="hljs-keyword">if</span> [ <span class="hljs-variable">$a</span> == <span class="hljs-variable">$task</span> ]<span class="hljs-keyword">then</span>    function_scf    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;scf directory writing successfully !&quot;</span><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$b</span> == <span class="hljs-variable">$task</span> ]<span class="hljs-keyword">then</span>     function_dos    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;dos directory writing successfully !&quot;</span><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$c</span> == <span class="hljs-variable">$task</span> ]<span class="hljs-keyword">then</span>    function_band    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;band directory writing successfully !&quot;</span><span class="hljs-keyword">fi</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="scripts" scheme="https://uncleleiy.github.io/categories/scripts/"/>
    
    
    <category term="vasp" scheme="https://uncleleiy.github.io/tags/vasp/"/>
    
    <category term="shell" scheme="https://uncleleiy.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell 文件上传下载脚本</title>
    <link href="https://uncleleiy.github.io/2023/07/01/blog-24-shell-scripts/"/>
    <id>https://uncleleiy.github.io/2023/07/01/blog-24-shell-scripts/</id>
    <published>2023-07-01T08:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="自定义超算上传下载文件的脚本"><a href="#自定义超算上传下载文件的脚本" class="headerlink" title="自定义超算上传下载文件的脚本"></a>自定义超算上传下载文件的脚本</h1><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/env bash</span><span class="hljs-comment"># The script is used to sent or receive files to the Super Calculation Client </span><span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Choose to upload or download: (u/d)? &quot;</span> <span class="hljs-built_in">read</span> choicea=u <span class="hljs-comment"># a=upload</span>b=d <span class="hljs-comment"># d=download</span><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$a</span> == <span class="hljs-variable">$choice</span> ]<span class="hljs-keyword">then</span>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Enter the name of file you&#x27;re going to upload: &quot;</span>    <span class="hljs-built_in">read</span> file_upload    rayfile-c -a hpccube.com -P 00000 -u hostname -w b1ed11352f8574a48e-d28f-4239-8fb0-8e8d613e8620 -o upload -d / -s ./<span class="hljs-variable">$file_upload</span><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$b</span> == <span class="hljs-variable">$choice</span> ]<span class="hljs-keyword">then</span>     <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Enter the name of file you&#x27;re going to download: &quot;</span>    <span class="hljs-built_in">read</span> file_download    rayfile-c -a hpccube.com -P 00000 -u hostname -w 9380ec0f4b39b5e655-0d2e-477e-838c-c86a40ba3a10 -o download -d ./ -s /<span class="hljs-variable">$file_download</span><span class="hljs-keyword">fi</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="scripts" scheme="https://uncleleiy.github.io/categories/scripts/"/>
    
    
    <category term="shell" scheme="https://uncleleiy.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell+python 作图脚本</title>
    <link href="https://uncleleiy.github.io/2023/06/30/blog-23-shell-python-scripts/"/>
    <id>https://uncleleiy.github.io/2023/06/30/blog-23-shell-python-scripts/</id>
    <published>2023-06-30T08:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-使用python作图的脚本-一"><a href="#1-使用python作图的脚本-一" class="headerlink" title="1.使用python作图的脚本(一)"></a>1.使用python作图的脚本(一)</h1><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3 python3</span><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> npx,y = np.loadtxt(<span class="hljs-string">&#x27;input.dat&#x27;</span>, delimiter = <span class="hljs-string">&#x27;,&#x27;</span>, usecols=(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>), unpack=<span class="hljs-literal">True</span>)plt.xlabel(<span class="hljs-string">&#x27;x / units&#x27;</span>)plt.ylabel(<span class="hljs-string">&#x27;y / units&#x27;</span>)plt.plot(x,y, <span class="hljs-string">&#x27;rs-&#x27;</span>, linewidth=<span class="hljs-number">2.0</span>)plt.show()</code></pre><h1 id="2-使用python作图的脚本-二"><a href="#2-使用python作图的脚本-二" class="headerlink" title="2.使用python作图的脚本(二)"></a>2.使用python作图的脚本(二)</h1><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3 python3</span><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> npx,y,z = np.loadtxt(<span class="hljs-string">&#x27;input.dat&#x27;</span>, delimiter = <span class="hljs-string">&#x27;,&#x27;</span>, usecols=(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>), unpack=<span class="hljs-literal">True</span>)plt.xlabel(<span class="hljs-string">&#x27;x / s&#x27;</span>)plt.ylabel(<span class="hljs-string">&#x27;y / s&#x27;</span>)plt.plot(x,y, <span class="hljs-string">&#x27;rs-&#x27;</span>, linewidth=<span class="hljs-number">2.0</span>)plt.plot(x,z*<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;bs-&#x27;</span>, linewidth=<span class="hljs-number">2.0</span>)plt.show()``` <span class="hljs-comment"># 3.二维两列数据作图的脚本(一)</span>```bash<span class="hljs-comment">#!/usr/bin/env bash</span>echo <span class="hljs-string">&quot;This script is used to plot 2D diagram&quot;</span>function_input()&#123;echo -n <span class="hljs-string">&quot;Please name the plot script: (.py)&quot;</span>read nameecho -n <span class="hljs-string">&quot;Please enter the plot data file: &quot;</span>read dataecho -n <span class="hljs-string">&quot;Please name the xlabel(&#x27; / &#x27;): &quot;</span>read xlabelecho -n <span class="hljs-string">&quot;Please name the ylabel(&#x27; / &#x27;): &quot;</span>read ylabel&#125;function_input $name $data $xlabel $ylabelcat &gt; $name &lt;&lt;!<span class="hljs-comment">#!/usr/bin/env python3</span><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> npx,y = np.loadtxt(<span class="hljs-string">&#x27;$data&#x27;</span>, delimiter = <span class="hljs-string">&#x27; &#x27;</span>, usecols=(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>), unpack=<span class="hljs-literal">True</span>)plt.xlabel(<span class="hljs-string">&#x27;$xlabel&#x27;</span>)plt.ylabel(<span class="hljs-string">&#x27;$ylabel&#x27;</span>)plt.plot(x,y, <span class="hljs-string">&#x27;rs-&#x27;</span>, linewidth=<span class="hljs-number">2.0</span>)plt.show() !python3 $name</code></pre><h1 id="4-二维三列数据作图的脚本-二"><a href="#4-二维三列数据作图的脚本-二" class="headerlink" title="4.二维三列数据作图的脚本(二)"></a>4.二维三列数据作图的脚本(二)</h1><pre><code class="hljs bash"><span class="hljs-meta">#!/usr/bin/env bash</span><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;This script is used to plot 3D diagram&quot;</span><span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Please name the plot script(.py): &quot;</span><span class="hljs-built_in">read</span> name<span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Please enter the plot data file: &quot;</span><span class="hljs-built_in">read</span> data<span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Please name the xlabel(&#x27; / &#x27;): &quot;</span><span class="hljs-built_in">read</span> xlabel<span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;Please name the ylabel(&#x27; / &#x27;): &quot;</span><span class="hljs-built_in">read</span> ylabel<span class="hljs-built_in">cat</span> &gt; <span class="hljs-variable">$name</span> &lt;&lt;!<span class="hljs-comment">#!/usr/bin/env python3</span>import matplotlib.pyplot as pltimport numpy as npx,y,z = np.loadtxt(<span class="hljs-string">&#x27;$data&#x27;</span>, delimiter = <span class="hljs-string">&#x27; &#x27;</span>, usecols=(0, 1, 2), unpack=True)plt.xlabel(<span class="hljs-string">&#x27;$xlabel&#x27;</span>)plt.ylabel(<span class="hljs-string">&#x27;$ylabel&#x27;</span>)plt.plot(x,y, <span class="hljs-string">&#x27;rs-&#x27;</span>, linewidth=2.0)plt.plot(x,z*4, <span class="hljs-string">&#x27;bs-&#x27;</span>, linewidth=2.0)plt.show() !python3 <span class="hljs-variable">$name</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="scripts" scheme="https://uncleleiy.github.io/categories/scripts/"/>
    
    
    <category term="python" scheme="https://uncleleiy.github.io/tags/python/"/>
    
    <category term="shell" scheme="https://uncleleiy.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>python 基础语法</title>
    <link href="https://uncleleiy.github.io/2023/06/29/blog-22-python/"/>
    <id>https://uncleleiy.github.io/2023/06/29/blog-22-python/</id>
    <published>2023-06-29T14:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python基本语法归纳"><a href="#python基本语法归纳" class="headerlink" title="python基本语法归纳"></a>python基本语法归纳</h1><pre><code class="hljs python"><span class="hljs-comment">## how to comment in more than one line: using &quot;&quot;&quot; or &#x27;&#x27;&#x27; </span><span class="hljs-comment">## in fact, &#x27; equall to &quot;</span><span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">this is comment one</span><span class="hljs-string">this is comment two</span><span class="hljs-string">this is comment three </span><span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">this is comment one </span><span class="hljs-string">this is comment two</span><span class="hljs-string">this is comment three</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-comment">## how to define variables </span>a = <span class="hljs-string">&quot;hello, dear ~&quot;</span><span class="hljs-comment">## how to print it </span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span>, my pleasure to meet you here !&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span>*<span class="hljs-number">50</span>)<span class="hljs-comment">## how to write codes more than one line: using \</span>argv1 = <span class="hljs-number">1</span> ; argv2 = <span class="hljs-number">2</span> ; argv3 = <span class="hljs-number">3</span> ; argv4 = <span class="hljs-number">4</span> ;b = argv1 + \    argv2 + \    argv3 + \    argv4 <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;1 + 2 + 3 + 4 = <span class="hljs-subst">&#123;b&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span>*<span class="hljs-number">50</span>)<span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">here be attention the order of define variables and use them !!!</span><span class="hljs-string">don&#x27;t use the variable that you never define before !!! </span><span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-comment">## there are four kinds of number: int, bool, float, complex(a + bi)</span>int1 = <span class="hljs-number">1</span>bool0 = <span class="hljs-literal">False</span>bool00 = <span class="hljs-string">&#x27;false&#x27;</span>float1 = <span class="hljs-number">2E5</span>complex1 = <span class="hljs-number">1</span> + <span class="hljs-number">1j</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&quot;&quot;int1 = <span class="hljs-subst">&#123;int1&#125;</span>, </span><span class="hljs-string">bool0 = <span class="hljs-subst">&#123;bool0&#125;</span>, </span><span class="hljs-string">bool00 = <span class="hljs-subst">&#123;bool00&#125;</span>, </span><span class="hljs-string">float1 = <span class="hljs-subst">&#123;float1&#125;</span>, </span><span class="hljs-string">complex1 = <span class="hljs-subst">&#123;complex1&#125;</span>&quot;&quot;&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span>*<span class="hljs-number">50</span>)<span class="hljs-comment">## \ can be used to change initial meaning, but we add r in front of the string to avoid </span>a = <span class="hljs-string">&#x27;print(&quot;this is line with \\n&quot;)&#x27;</span>b = <span class="hljs-string">&#x27;print(r&quot;this is line with \\n&quot;)&#x27;</span> <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span>:&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;this is line with \n&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;b&#125;</span>:&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">r&#x27;this is line with \n&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span>*<span class="hljs-number">50</span>)<span class="hljs-comment">## how to conject strings using + and *</span>a = <span class="hljs-string">&#x27;this &#x27;</span>b = <span class="hljs-string">&#x27;is &#x27;</span>c = <span class="hljs-string">&#x27;a&#x27;</span>x = <span class="hljs-string">&#x27; &#x27;</span>d = <span class="hljs-string">&#x27;string&#x27;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span><span class="hljs-subst">&#123;b&#125;</span><span class="hljs-subst">&#123;c&#125;</span><span class="hljs-subst">&#123;x&#125;</span><span class="hljs-subst">&#123;d&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(a + b + c + x + d)<span class="hljs-built_in">print</span>(a*<span class="hljs-number">2</span> + b*<span class="hljs-number">2</span> + c*<span class="hljs-number">2</span> + x + d*<span class="hljs-number">2</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span>*<span class="hljs-number">50</span>)<span class="hljs-comment">## how to print strings in different ways</span>strs=<span class="hljs-string">&#x27;1234567890&#x27;</span><span class="hljs-built_in">print</span>(strs)<span class="hljs-built_in">print</span>(strs[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<span class="hljs-built_in">print</span>(strs[<span class="hljs-number">2</span>:<span class="hljs-number">5</span>])<span class="hljs-built_in">print</span>(strs[<span class="hljs-number">2</span>:])<span class="hljs-built_in">print</span>(strs[<span class="hljs-number">1</span>:<span class="hljs-number">5</span>:<span class="hljs-number">2</span>])<span class="hljs-built_in">print</span>(strs * <span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(strs + <span class="hljs-string">&#x27;love&#x27;</span>)<span class="hljs-built_in">print</span>(strs + <span class="hljs-string">&#x27;\\n&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">r&#x27;\n&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\\n&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">50</span>)<span class="hljs-comment">## how to write more statements in one line using &lt;;&gt;</span><span class="hljs-keyword">import</span> sys; x = <span class="hljs-string">&#x27;love never fade away&#x27;</span>; sys.stdout.write(x + <span class="hljs-string">&#x27;\n&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">50</span>)<span class="hljs-comment">## how to print without shifting using end=&quot; &quot;</span>x=<span class="hljs-string">&quot;love&quot;</span>y=<span class="hljs-string">&quot;never&quot;</span>z=<span class="hljs-string">&quot;fade&quot;</span><span class="hljs-comment"># shift</span><span class="hljs-built_in">print</span>(x)<span class="hljs-built_in">print</span>(y)<span class="hljs-built_in">print</span>(z)<span class="hljs-comment"># no shift</span><span class="hljs-built_in">print</span>(x, end=<span class="hljs-string">&quot; &quot;</span>)<span class="hljs-built_in">print</span>(y, end=<span class="hljs-string">&quot; &quot;</span>)<span class="hljs-built_in">print</span>(z, end=<span class="hljs-string">&quot; &quot;</span>)<span class="hljs-built_in">print</span>()<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;\n&#x27;</span>)<span class="hljs-comment"># how to use &#x27;import&#x27; to input some functions that you need</span><span class="hljs-comment"># here we are going to find the path of python3  </span><span class="hljs-keyword">import</span> sys<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">25</span> + <span class="hljs-string">&quot; import module &quot;</span> + <span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">25</span>) <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;the arguments list as following: &quot;</span>)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> sys.argv:    <span class="hljs-built_in">print</span>(i)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\n the path of python:&#x27;</span>,sys.path)<span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv,path<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">25</span> + <span class="hljs-string">&quot; import module &quot;</span> + <span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">25</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;path:&#x27;</span>,path)</code></pre><h1 id="python调试结果展示"><a href="#python调试结果展示" class="headerlink" title="python调试结果展示"></a>python调试结果展示</h1><pre><code class="hljs markdown">hello, dear ~, my pleasure to meet you here !<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**1 + 2 + 3 + 4 = 10<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**int1 = 1,bool0 = False,bool00 = false,float1 = 200000.0,complex1 = (1+1j)<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**print(&quot;this is line with \n&quot;):this is line withprint(r&quot;this is line with \n&quot;):this is line with \n<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**this is a stringthis is a stringthis this is is aa stringstring<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**123456789012345678934534567890241234567890123456789012345678901234567890love1234567890\n\n\n<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**love never fade away<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**loveneverfadelove never fade<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>* import module <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*the arguments list as following:ex1.py the path of python: [&#x27;/home/lei/tvp/ex&#x27;, &#x27;/usr/lib/python38.zip&#x27;, &#x27;/usr/lib/python3.8&#x27;, &#x27;/usr/lib/python3.8/lib-dynload&#x27;, &#x27;/usr/local/lib/python3.8/dist-packages&#x27;, &#x27;/usr/lib/python3/dist-packages&#x27;]<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>* import module <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*path: [&#x27;/home/lei/tvp/ex&#x27;, &#x27;/usr/lib/python38.zip&#x27;, &#x27;/usr/lib/python3.8&#x27;, &#x27;/usr/lib/python3.8/lib-dynload&#x27;, &#x27;/usr/local/lib/python3.8/dist-packages&#x27;, &#x27;/usr/lib/python3/dist-packages&#x27;]</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="python" scheme="https://uncleleiy.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://uncleleiy.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 简单学习记录(21)</title>
    <link href="https://uncleleiy.github.io/2023/06/28/blog-21-python/"/>
    <id>https://uncleleiy.github.io/2023/06/28/blog-21-python/</id>
    <published>2023-06-28T14:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Recording-of-python-study"><a href="#Recording-of-python-study" class="headerlink" title="Recording of python study"></a>Recording of python study</h1><h2 id="21-1-how-to-use-the-key-word-return-to-send-the-value-back"><a href="#21-1-how-to-use-the-key-word-return-to-send-the-value-back" class="headerlink" title="21.1 how to use the key word: return , to send the value back"></a>21.1 how to use the key word: return , to send the value back</h2><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a, b</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;add <span class="hljs-subst">&#123;a&#125;</span> + <span class="hljs-subst">&#123;b&#125;</span>&quot;</span>)    <span class="hljs-keyword">return</span> a + b    <span class="hljs-keyword">def</span> <span class="hljs-title function_">subtract</span>(<span class="hljs-params">a, b</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;subtract <span class="hljs-subst">&#123;a&#125;</span> - <span class="hljs-subst">&#123;b&#125;</span>&quot;</span>)    <span class="hljs-keyword">return</span> a - b    <span class="hljs-keyword">def</span> <span class="hljs-title function_">multiply</span>(<span class="hljs-params">a, b</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;multiply <span class="hljs-subst">&#123;a&#125;</span> * <span class="hljs-subst">&#123;b&#125;</span>&quot;</span>)    <span class="hljs-keyword">return</span> a * b<span class="hljs-keyword">def</span> <span class="hljs-title function_">divide</span>(<span class="hljs-params">a, b</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;divide <span class="hljs-subst">&#123;a&#125;</span> / <span class="hljs-subst">&#123;b&#125;</span>&quot;</span>)    <span class="hljs-keyword">return</span> a / b    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;let&#x27;s do some math with just functions !&quot;</span>)age = add(<span class="hljs-number">20</span>, <span class="hljs-number">3</span>)height = subtract(<span class="hljs-number">166</span>, <span class="hljs-number">0</span>)weight = multiply(<span class="hljs-number">45</span>, <span class="hljs-number">2</span>)IQ = divide(<span class="hljs-number">250</span>, <span class="hljs-number">2</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;age: <span class="hljs-subst">&#123;age&#125;</span>, height: <span class="hljs-subst">&#123;height&#125;</span>, weight: <span class="hljs-subst">&#123;weight&#125;</span>, IQ: <span class="hljs-subst">&#123;IQ&#125;</span>&quot;</span>)amazing = add(age, subtract(height, multiply(weight, divide(IQ, <span class="hljs-number">2</span>))))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;wasn&#x27;t it amazing ?&quot;</span>, amazing, <span class="hljs-string">&quot;yeah, it&#x27;s funny !&quot;</span>)</code></pre><h3 id="21-1-what-is-shown-in-the-screen"><a href="#21-1-what-is-shown-in-the-screen" class="headerlink" title="21.1 what is shown in the screen:"></a>21.1 what is shown in the screen:</h3><pre><code class="hljs apache"><span class="hljs-attribute">let</span>&#x27;s do some math with just functions !<span class="hljs-attribute">add</span> <span class="hljs-number">20</span> + <span class="hljs-number">3</span><span class="hljs-attribute">subtract</span> <span class="hljs-number">166</span> - <span class="hljs-number">0</span><span class="hljs-attribute">multiply</span> <span class="hljs-number">45</span> * <span class="hljs-number">2</span><span class="hljs-attribute">divide</span> <span class="hljs-number">250</span> / <span class="hljs-number">2</span><span class="hljs-attribute">age</span>: <span class="hljs-number">23</span>, height: <span class="hljs-number">166</span>, weight: <span class="hljs-number">90</span>, IQ: <span class="hljs-number">125</span>.<span class="hljs-number">0</span><span class="hljs-attribute">divide</span> <span class="hljs-number">125</span>.<span class="hljs-number">0</span> / <span class="hljs-number">2</span><span class="hljs-attribute">multiply</span> <span class="hljs-number">90</span> * <span class="hljs-number">62</span>.<span class="hljs-number">5</span><span class="hljs-attribute">subtract</span> <span class="hljs-number">166</span> - <span class="hljs-number">5625</span>.<span class="hljs-number">0</span><span class="hljs-attribute">add</span> <span class="hljs-number">23</span> + -<span class="hljs-number">5459</span>.<span class="hljs-number">0</span><span class="hljs-attribute">wasn</span>&#x27;t it amazing ? -<span class="hljs-number">5436</span>.<span class="hljs-number">0</span> yeah, it&#x27;s funny !</code></pre><h2 id="21-2-my-own-test-for-doing-some-math-calculation"><a href="#21-2-my-own-test-for-doing-some-math-calculation" class="headerlink" title="21.2 my own test for doing some math calculation"></a>21.2 my own test for doing some math calculation</h2><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">maths</span>(<span class="hljs-params">a, b</span>):    c = a + b; d = a - b; e = a * b; f = a / b;    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a + - * / b = &quot;</span>, c, d, e, f)    <span class="hljs-keyword">return</span> c - d - e - f<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;*&quot;</span> * <span class="hljs-number">50</span>) a = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;please enter 1first: \n&quot;</span>))b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;please enter 2second: \n&quot;</span>))k = maths(a, b)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;calculated successfully !&quot;</span>)<span class="hljs-built_in">print</span>(k)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;*&quot;</span> * <span class="hljs-number">50</span>)</code></pre><h3 id="21-2-what-is-shown-in-the-screen"><a href="#21-2-what-is-shown-in-the-screen" class="headerlink" title="21.2 what is shown in the screen:"></a>21.2 what is shown in the screen:</h3><pre><code class="hljs markdown"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>**please enter 1first:13please enter 2second:23a + - * / b =  36 -10 299 0.5652173913043478calculated successfully !-253.56521739130434<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span></code></pre><p><em>教程参考：learn python the hard way</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="python" scheme="https://uncleleiy.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://uncleleiy.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>C++ 简单学习记录(0)</title>
    <link href="https://uncleleiy.github.io/2023/06/26/blog-19-C/"/>
    <id>https://uncleleiy.github.io/2023/06/26/blog-19-C/</id>
    <published>2023-06-26T10:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-学习笔记-（未完待续）"><a href="#C-学习笔记-（未完待续）" class="headerlink" title="C++学习笔记 （未完待续）"></a>C++学习笔记 （未完待续）</h1><h2 id="第一章至第四章范例"><a href="#第一章至第四章范例" class="headerlink" title="第一章至第四章范例"></a>第一章至第四章范例</h2><pre><code class="hljs powershell">/*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-comment">#include &lt;cmath&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    double area;    cin &gt;&gt; area;    double x;    x = sqrt(area);     cout &lt;&lt; x &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">2.4</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>void simon(int n);int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    int k;    cout &lt;&lt; <span class="hljs-string">&quot;input an number&quot;</span> &lt;&lt; endl;    cin &gt;&gt; k;    simon(k);     cout &lt;&lt; <span class="hljs-string">&quot;done!&quot;</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> ;&#125;void simon(int n)&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    cout &lt;&lt; <span class="hljs-string">&quot;thsi is :&quot;</span> &lt;&lt; n &lt;&lt; endl;&#125;*///<span class="hljs-number">2.5</span>  /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int multiplication(int  m);int main()&#123;    cout &lt;&lt; <span class="hljs-string">&quot;enter one number :&quot;</span>&lt;&lt; <span class="hljs-string">&quot;a=&quot;</span>;    int a;    cin &gt;&gt; a;    int ok;    ok= multiplication(a);    cout &lt;&lt; <span class="hljs-string">&quot;the answer is :&quot;</span>&lt;&lt; <span class="hljs-string">&quot;ok=&quot;</span> &lt;&lt; ok;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;int multiplication(int m)&#123;    m = m * <span class="hljs-number">100</span>;    <span class="hljs-keyword">return</span> m;&#125;*///<span class="hljs-number">2.6</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-comment">#include &lt;climits&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;    int n_int = INT_MAX;    short n_short = SHRT_MAX;    long n_long = LONG_MAX;    long long n_long_long = LLONG_MAX;    cout &lt;&lt; <span class="hljs-string">&quot;int is &quot;</span> &lt;&lt; sizeof (int) &lt;&lt; <span class="hljs-string">&quot; bytes. &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;short is &quot;</span> &lt;&lt; sizeof n_short &lt;&lt; <span class="hljs-string">&quot; bytes. &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;short is &quot;</span> &lt;&lt; sizeof (short) &lt;&lt; <span class="hljs-string">&quot; bytes. &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;long is &quot;</span> &lt;&lt; sizeof (long) &lt;&lt; <span class="hljs-string">&quot; bytes. &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;long long is &quot;</span> &lt;&lt; sizeof(long long) &lt;&lt; <span class="hljs-string">&quot; bytes. &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;max value: &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;int : &quot;</span> &lt;&lt; n_int &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;short : &quot;</span> &lt;&lt; n_short &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;long : &quot;</span> &lt;&lt; n_long &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;long long : &quot;</span> &lt;&lt; n_long_long &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.1</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-comment">#include &lt;climits&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;    short sam = SHRT_MAX;    unsigned short sum = sam;    cout &lt;&lt; <span class="hljs-string">&quot;sam has &quot;</span> &lt;&lt; sam &lt;&lt; <span class="hljs-string">&quot; yuan. &quot;</span> &lt;&lt; <span class="hljs-string">&quot;and sum has &quot;</span> &lt;&lt; sum &lt;&lt; <span class="hljs-string">&quot; yuan. &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;add 1 yuan to each account. &quot;</span> &lt;&lt; endl &lt;&lt; <span class="hljs-string">&quot;now :&quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;sum has &quot;</span> &lt;&lt; sum + <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-string">&quot; yuan. &quot;</span> &lt;&lt; <span class="hljs-string">&quot;and sam has &quot;</span> &lt;&lt; sam + <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-string">&quot; yuan. &quot;</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;the longth is &quot;</span> &lt;&lt; sam &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;the longth is &quot;</span> &lt;&lt; sum &lt;&lt; endl;     <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.2</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    int chest = <span class="hljs-number">42</span>;    int waist = <span class="hljs-number">0</span>x42;    int inseam = <span class="hljs-number">042</span>;    cout &lt;&lt; <span class="hljs-string">&quot;monsieur cuts a striking figure !\n&quot;</span>;    cout &lt;&lt; <span class="hljs-string">&quot;chest = &quot;</span> &lt;&lt; chest &lt;&lt; <span class="hljs-string">&quot; (42 in decimal)\n&quot;</span>;    cout &lt;&lt; <span class="hljs-string">&quot;waist = &quot;</span> &lt;&lt; waist &lt;&lt; <span class="hljs-string">&quot; (42 in hex)\n&quot;</span>;    cout &lt;&lt; <span class="hljs-string">&quot;inseam = &quot;</span> &lt;&lt; inseam &lt;&lt; <span class="hljs-string">&quot; (42 in octal)\n&quot;</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.3</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;    int chest = <span class="hljs-number">42</span>;    int waist = <span class="hljs-number">42</span>;    int inseam = <span class="hljs-number">42</span>;    cout &lt;&lt; <span class="hljs-string">&quot;monsieur cuts a striking figure ! \n&quot;</span>;    cout &lt;&lt; <span class="hljs-string">&quot;chest = &quot;</span> &lt;&lt; chest &lt;&lt;<span class="hljs-string">&quot; (decimal for 42 ) \n&quot;</span>;    cout &lt;&lt; hex;    cout &lt;&lt; <span class="hljs-string">&quot;waist = &quot;</span> &lt;&lt; waist &lt;&lt; <span class="hljs-string">&quot; (hexadecimal for 42 ) \n&quot;</span>;    cout &lt;&lt; oct;    cout &lt;&lt; <span class="hljs-string">&quot;inseam = &quot;</span> &lt;&lt; inseam &lt;&lt; <span class="hljs-string">&quot; (octal for 42 ) \n&quot;</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.4</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;    char ch;    cout &lt;&lt; <span class="hljs-string">&quot;please enter one character : &quot;</span>;    cin &gt;&gt; ch;    cout &lt;&lt; <span class="hljs-string">&quot;the character is : &quot;</span> &lt;&lt; ch &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.5</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;      char ch = <span class="hljs-string">&#x27;M&#x27;</span>;    int k = ch;    cout &lt;&lt; <span class="hljs-string">&quot;the ASCII code for &quot;</span> &lt;&lt; ch &lt;&lt; <span class="hljs-string">&quot; is &quot;</span> &lt;&lt; k &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;add one to the character code : &quot;</span> &lt;&lt; endl;    ch = ch + <span class="hljs-number">1</span>;    k = ch;    cout &lt;&lt; <span class="hljs-string">&quot;the ASCII code for &quot;</span> &lt;&lt; ch &lt;&lt; <span class="hljs-string">&quot; is &quot;</span> &lt;&lt; k &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;displaying by using cout.put() function : &quot;</span>;    cout.put(ch);    cout.put(<span class="hljs-string">&#x27;!&#x27;</span>);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.6</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;    bool a = true;    bool b = false;    cout &lt;&lt; <span class="hljs-string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;    const int m = <span class="hljs-number">1</span>;    cout &lt;&lt; <span class="hljs-string">&quot;m - b + a = &quot;</span> &lt;&lt; m - b + a &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.7</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    cout.setf(ios_base::fixed, ios_base::floatfield);//fixed<span class="hljs-literal">-point</span>    float tub = <span class="hljs-number">10.0</span> / <span class="hljs-number">3.0</span>;    double mint = <span class="hljs-number">10.0</span> / <span class="hljs-number">3.0</span>;    const float million = <span class="hljs-number">1.0</span>e6;    cout &lt;&lt; <span class="hljs-string">&quot;tub = &quot;</span> &lt;&lt; tub &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;a million tubs = &quot;</span> &lt;&lt; million * tub &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;nand ten million tubs = &quot;</span>&lt;&lt; <span class="hljs-number">10</span> * million * tub &lt;&lt; endl;        cout &lt;&lt; <span class="hljs-string">&quot;mint = &quot;</span> &lt;&lt; mint &lt;&lt; <span class="hljs-string">&quot; and a million mints = &quot;</span>&lt;&lt; million * mint &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.8</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;    float a = <span class="hljs-number">2.34</span>E+<span class="hljs-number">13</span>f;    float b = a + <span class="hljs-number">1.0</span>f;    //double a = <span class="hljs-number">2.34</span>E13;    //double b = a + <span class="hljs-number">1.0</span>;    cout &lt;&lt; <span class="hljs-string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;b - a = &quot;</span> &lt;&lt; b - a &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.9</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main(void)&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    float a;    float b;    cout.setf(ios_base::fixed, ios_base::floatfield);    cout &lt;&lt; <span class="hljs-string">&quot;enter a number :&quot;</span>;    cin &gt;&gt; a;    cout &lt;&lt; <span class="hljs-string">&quot;enter another number :&quot;</span>;    cin &gt;&gt; b;         cout &lt;&lt; <span class="hljs-string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="hljs-string">&quot;; b = &quot;</span> &lt;&lt; b &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;a + b = &quot;</span> &lt;&lt; a + b &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;a - b = &quot;</span> &lt;&lt; a - b &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;a * b = &quot;</span> &lt;&lt; a * b &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;a/b = &quot;</span> &lt;&lt; a / b &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.10</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    cout.setf(ios_base::fixed, ios_base::floatfield);    cout &lt;&lt; <span class="hljs-string">&quot;Integer division : 9/5 = &quot;</span> &lt;&lt; <span class="hljs-number">9</span> / <span class="hljs-number">5</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;Float-point division : 9.0/5.0 = &quot;</span> &lt;&lt; <span class="hljs-number">9.0</span> / <span class="hljs-number">5.0</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;Mixed division : 9.0/5 = &quot;</span> &lt;&lt; <span class="hljs-number">9.0</span> / <span class="hljs-number">5</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;double constants : 1e7/9.0 = &quot;</span> &lt;&lt; <span class="hljs-number">1</span>e7 / <span class="hljs-number">9.0</span> &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;float constants : 1e7f/9.0f = &quot;</span> &lt;&lt; <span class="hljs-number">1</span>e7f / <span class="hljs-number">9.0</span>f &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.11</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main(void)&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    const int k = <span class="hljs-number">14</span>;    int lbs;    cout &lt;&lt; <span class="hljs-string">&quot;enter your weight in pounds : &quot;</span>;    cin &gt;&gt; lbs;    int stone = lbs / k;    int pounds = lbs % k;    cout &lt;&lt; lbs &lt;&lt; <span class="hljs-string">&quot; pounds are &quot;</span> &lt;&lt; stone &lt;&lt; <span class="hljs-string">&quot; and &quot;</span> &lt;&lt; pounds &lt;&lt; <span class="hljs-string">&quot; pounds \n&quot;</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.12</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    cout.setf(ios_base::fixed, ios_base::floatfield);    float tree = <span class="hljs-number">3</span>;    int guess(<span class="hljs-number">3.9832</span>);    int debt = <span class="hljs-number">7.2</span>E12;    cout &lt;&lt; <span class="hljs-string">&quot;tree = &quot;</span> &lt;&lt; tree &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;guess = &quot;</span> &lt;&lt; guess &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;debt = &quot;</span> &lt;&lt; debt &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; &#125;*///<span class="hljs-number">3.13</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    int a, b, c;    a = <span class="hljs-number">19.99</span> + <span class="hljs-number">11.99</span>;    b = int(<span class="hljs-number">19.99</span>) + int(<span class="hljs-number">11.99</span>);    c = (int)<span class="hljs-number">19.99</span> + (int)<span class="hljs-number">11.99</span>;    cout &lt;&lt; <span class="hljs-string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="hljs-string">&quot; ,  b= &quot;</span> &lt;&lt; b &lt;&lt; <span class="hljs-string">&quot; ,  c = &quot;</span> &lt;&lt; c &lt;&lt; endl;        char ch = <span class="hljs-string">&#x27;Z&#x27;</span>;    cout &lt;&lt; <span class="hljs-string">&quot;ch = &quot;</span> &lt;&lt; ch &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;int(ch) = &quot;</span> &lt;&lt; int(ch) &lt;&lt; endl;    cout &lt;&lt; <span class="hljs-string">&quot;static_cast&lt;int&gt;(ch) = &quot;</span> &lt;&lt; static_cast&lt;int&gt;(ch) &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">3.14</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    int yam[<span class="hljs-number">3</span>] = &#123; <span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">6</span> &#125;;    int yamcosts[<span class="hljs-number">3</span>] = &#123; <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> &#125;;    cout &lt;&lt; <span class="hljs-string">&quot;total yams = &quot;</span> &lt;&lt; yam[<span class="hljs-number">0</span>] + yam[<span class="hljs-number">1</span>] + yam[<span class="hljs-number">2</span>] &lt;&lt; endl;    int total = yam[<span class="hljs-number">0</span>] * yamcosts[<span class="hljs-number">0</span>] + yam[<span class="hljs-number">1</span>] * yamcosts[<span class="hljs-number">1</span>] + yam[<span class="hljs-number">2</span>] * yamcosts[<span class="hljs-number">2</span>];    cout &lt;&lt; <span class="hljs-string">&quot;the total expense is &quot;</span> &lt;&lt; total &lt;&lt; <span class="hljs-string">&quot; cents&quot;</span>&lt;&lt;endl;    cout &lt;&lt; <span class="hljs-string">&quot;\nSize of yams array = &quot;</span> &lt;&lt; sizeof yam &lt;&lt; <span class="hljs-string">&quot; bytes.\n&quot;</span>;    cout &lt;&lt; <span class="hljs-string">&quot;Size of one element = &quot;</span> &lt;&lt; sizeof yam[<span class="hljs-number">0</span>]&lt;&lt;<span class="hljs-string">&quot; bytes.\n&quot;</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*///<span class="hljs-number">4.1</span> /*<span class="hljs-comment">#include &lt;iostream&gt;</span>int main()&#123;    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*/</code></pre><h2 id="第四章习题"><a href="#第四章习题" class="headerlink" title="第四章习题"></a>第四章习题</h2><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-comment">//</span><span class="hljs-type">const</span> <span class="hljs-type">int</span> SIZE = <span class="hljs-number">10</span>;<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dichotomy</span><span class="hljs-params">(<span class="hljs-type">int</span> arr[], <span class="hljs-type">int</span> len, <span class="hljs-type">int</span> num)</span></span><span class="hljs-function"></span>&#123;<span class="hljs-type">int</span> front = <span class="hljs-number">0</span>, end = len, mid = <span class="hljs-number">0</span>;<span class="hljs-keyword">while</span> (front &lt; end)&#123;mid = (front + end) / <span class="hljs-number">2</span>;<span class="hljs-keyword">if</span> (arr[mid] &gt; num)&#123;end = mid - <span class="hljs-number">1</span>;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (arr[mid] &lt; num)&#123;front = mid + <span class="hljs-number">1</span>;&#125;<span class="hljs-keyword">else</span>&#123;cout &lt;&lt; num &lt;&lt; <span class="hljs-string">&quot; is the &quot;</span> &lt;&lt; (mid + <span class="hljs-number">1</span>) &lt;&lt; <span class="hljs-string">&quot; element.&quot;</span> &lt;&lt; endl;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-keyword">if</span> (front &gt;= end)&#123;cout &lt;&lt; <span class="hljs-string">&quot;There is no element!&quot;</span> &lt;&lt; endl;&#125;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">test</span><span class="hljs-params">(<span class="hljs-type">int</span> arr[], <span class="hljs-type">int</span> len, <span class="hljs-type">int</span> num)</span></span><span class="hljs-function"></span>&#123;<span class="hljs-type">int</span> low = <span class="hljs-number">0</span>, high = len, mid = <span class="hljs-number">0</span>;<span class="hljs-keyword">while</span> (low &lt;= high)&#123;mid = (low + high) / <span class="hljs-number">2</span>;<span class="hljs-keyword">if</span> (arr[mid] == num)&#123;<span class="hljs-keyword">return</span> mid;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (arr[mid] &gt; num)&#123;high = mid - <span class="hljs-number">1</span>;&#125;<span class="hljs-keyword">else</span>&#123;low = mid + <span class="hljs-number">1</span>;&#125;&#125;<span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;<span class="hljs-type">int</span> arr[SIZE] = &#123; <span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">17</span>,<span class="hljs-number">19</span>,<span class="hljs-number">23</span> &#125;;<span class="hljs-type">int</span> len = <span class="hljs-built_in">sizeof</span>(arr) / <span class="hljs-built_in">sizeof</span>(arr[<span class="hljs-number">0</span>]);<span class="hljs-type">int</span> num;cout &lt;&lt; <span class="hljs-string">&quot;Please enter your num:&quot;</span>;cin &gt;&gt; num;<span class="hljs-comment">//dichotomy(arr, len, num);</span>cout &lt;&lt; <span class="hljs-built_in">test</span>(arr, len, num) &lt;&lt; endl;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="C++" scheme="https://uncleleiy.github.io/categories/C/"/>
    
    
    <category term="C++" scheme="https://uncleleiy.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++ 简单学习记录(2)</title>
    <link href="https://uncleleiy.github.io/2023/06/25/blog-18-C/"/>
    <id>https://uncleleiy.github.io/2023/06/25/blog-18-C/</id>
    <published>2023-06-25T13:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-学习笔记"><a href="#C-学习笔记" class="headerlink" title="C++学习笔记"></a>C++学习笔记</h1><h2 id="第一题，编写小程序转换身高单位，问题主要在与如何表达变量，需要遵循变量有意义的原则；"><a href="#第一题，编写小程序转换身高单位，问题主要在与如何表达变量，需要遵循变量有意义的原则；" class="headerlink" title="//第一题，编写小程序转换身高单位，问题主要在与如何表达变量，需要遵循变量有意义的原则；"></a>//第一题，编写小程序转换身高单位，问题主要在与如何表达变量，需要遵循变量有意义的原则；</h2><pre><code class="hljs excel">/*#include &lt;iostream&gt;<span class="hljs-built_in">int</span> main()&#123;using namespace std;const <span class="hljs-built_in">int</span> <span class="hljs-built_in">t</span> = <span class="hljs-number">10</span>;<span class="hljs-built_in">int</span> height,meter,dmeter,cmeter;cout &lt;&lt; <span class="hljs-string">&quot;enter your height : &quot;</span>;cout.put(&#x27;_&#x27;);cin &gt;&gt; height;meter = height / (<span class="hljs-built_in">t</span>*<span class="hljs-built_in">t</span>);dmeter = height / <span class="hljs-built_in">t</span>-<span class="hljs-built_in">t</span>;cmeter = height % <span class="hljs-built_in">t</span>;cout &lt;&lt; <span class="hljs-string">&quot;your height is &quot;</span> &lt;&lt; meter &lt;&lt; <span class="hljs-string">&quot; meter ,&quot;</span> &lt;&lt; dmeter &lt;&lt; <span class="hljs-string">&quot; dmter ,&quot;</span> &lt;&lt;cmeter &lt;&lt; <span class="hljs-string">&quot; cmeter .&quot;</span>&lt;&lt; endl;return <span class="hljs-number">0</span>;&#125;*/</code></pre><h2 id="第二题，计算BMI；ok，所设置的变量应该有意义；"><a href="#第二题，计算BMI；ok，所设置的变量应该有意义；" class="headerlink" title="//第二题，计算BMI；ok，所设置的变量应该有意义；"></a>//第二题，计算BMI；ok，所设置的变量应该有意义；</h2><pre><code class="hljs nim">/*<span class="hljs-comment">#include&lt;iostream&gt;</span><span class="hljs-type">int</span> main(<span class="hljs-type">void</span>)&#123;<span class="hljs-keyword">using</span> namespace std;double feet, inches, pound, <span class="hljs-type">Eheight</span>, <span class="hljs-type">Cheight</span>, weight, <span class="hljs-type">BMI</span>;<span class="hljs-keyword">const</span> double h = <span class="hljs-number">12</span>;<span class="hljs-keyword">const</span> double m = <span class="hljs-number">0</span>.<span class="hljs-number">0254</span>;<span class="hljs-keyword">const</span> double w = <span class="hljs-number">2</span>.<span class="hljs-number">2</span>;cout &lt;&lt; <span class="hljs-string">&quot;enter your height with feet and inches :&quot;</span>;cin &gt;&gt; feet &gt;&gt; inches;cout &lt;&lt; <span class="hljs-string">&quot;enter your weight with pounds :&quot;</span>;cin &gt;&gt; pound;<span class="hljs-type">Eheight</span> = feet * h + inches;<span class="hljs-type">Cheight</span> = <span class="hljs-type">Eheight</span> * m;weight = pound / w;<span class="hljs-type">BMI</span> = weight / (<span class="hljs-type">Cheight</span> * <span class="hljs-type">Cheight</span>);cout &lt;&lt; <span class="hljs-string">&quot;your BMI is : &quot;</span> &lt;&lt; <span class="hljs-type">BMI</span> &lt;&lt; endl;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*/</code></pre><h2 id="第三题，纬度计算；ok，可以使用类型转换；"><a href="#第三题，纬度计算；ok，可以使用类型转换；" class="headerlink" title="//第三题，纬度计算；ok，可以使用类型转换；"></a>//第三题，纬度计算；ok，可以使用类型转换；</h2><pre><code class="hljs excel">/*#include &lt;iostream&gt;<span class="hljs-built_in">int</span> main(void)&#123;double degree, <span class="hljs-built_in">minute</span>, <span class="hljs-built_in">second</span>, answers;const double <span class="hljs-built_in">t</span> = <span class="hljs-number">60</span>;using namespace std;cout &lt;&lt; <span class="hljs-string">&quot;Enter a latitude in degrees, minutes , and seconds : &quot;</span> &lt;&lt; endl;cout &lt;&lt; <span class="hljs-string">&quot;First, enter the degrees : &quot;</span>;cin &gt;&gt; degree;cout &lt;&lt; <span class="hljs-string">&quot;Next, enter the minutes of arc : &quot;</span>;cin &gt;&gt; <span class="hljs-built_in">minute</span>;cout &lt;&lt; <span class="hljs-string">&quot;Finally, enter the seconds of arc : &quot;</span>;cin &gt;&gt; <span class="hljs-built_in">second</span>;answers = degree + <span class="hljs-built_in">minute</span> / <span class="hljs-built_in">t</span> + <span class="hljs-built_in">second</span> / <span class="hljs-built_in">t</span> / <span class="hljs-built_in">t</span> ;cout &lt;&lt; degree &lt;&lt; <span class="hljs-string">&quot; degrees , &quot;</span> &lt;&lt; <span class="hljs-built_in">minute</span> &lt;&lt; <span class="hljs-string">&quot; minutes , &quot;</span> &lt;&lt; <span class="hljs-built_in">second</span> &lt;&lt; <span class="hljs-string">&quot; seconds = &quot;</span> &lt;&lt; answers &lt;&lt; <span class="hljs-string">&quot; degrees &quot;</span> &lt;&lt; endl;return <span class="hljs-number">0</span>;&#125;*/</code></pre><h2 id="第四题，时间转换；可以使用减法代替取余方式；"><a href="#第四题，时间转换；可以使用减法代替取余方式；" class="headerlink" title="//第四题，时间转换；可以使用减法代替取余方式；"></a>//第四题，时间转换；可以使用减法代替取余方式；</h2><pre><code class="hljs excel">/*#include&lt;iostream&gt;<span class="hljs-built_in">int</span> main(void)&#123;using namespace std;long <span class="hljs-built_in">second</span>, <span class="hljs-built_in">days</span>, hours, minutes, seconds;const long <span class="hljs-built_in">t</span> = <span class="hljs-number">60</span>;const long k = <span class="hljs-number">24</span>;cout &lt;&lt; <span class="hljs-string">&quot;Enter the number of seconds : &quot;</span>;cin &gt;&gt; <span class="hljs-built_in">second</span>;//<span class="hljs-built_in">days</span> = <span class="hljs-built_in">second</span> / (<span class="hljs-built_in">t</span>*<span class="hljs-built_in">t</span>*k);//hours = (<span class="hljs-built_in">second</span> - <span class="hljs-built_in">days</span>*<span class="hljs-built_in">t</span>*<span class="hljs-built_in">t</span>*k)/(<span class="hljs-built_in">t</span>*<span class="hljs-built_in">t</span>);//minutes = (<span class="hljs-built_in">second</span>- <span class="hljs-built_in">days</span>*<span class="hljs-built_in">t</span>*<span class="hljs-built_in">t</span>*k-hours*<span class="hljs-built_in">t</span>*<span class="hljs-built_in">t</span>)/<span class="hljs-built_in">t</span>;//seconds = <span class="hljs-built_in">second</span> - <span class="hljs-built_in">days</span> * <span class="hljs-built_in">t</span> * <span class="hljs-built_in">t</span> * k - hours * <span class="hljs-built_in">t</span> * <span class="hljs-built_in">t</span>-minutes*<span class="hljs-built_in">t</span>;<span class="hljs-built_in">days</span> = <span class="hljs-built_in">second</span> / (<span class="hljs-built_in">t</span> * <span class="hljs-built_in">t</span> * k);<span class="hljs-built_in">second</span> = <span class="hljs-built_in">second</span> % (<span class="hljs-built_in">t</span> * <span class="hljs-built_in">t</span> * k);hours = <span class="hljs-built_in">second</span> / (<span class="hljs-built_in">t</span> * <span class="hljs-built_in">t</span>);<span class="hljs-built_in">second</span> = <span class="hljs-built_in">second</span> % (<span class="hljs-built_in">t</span> * <span class="hljs-built_in">t</span>);minutes = <span class="hljs-built_in">second</span> / <span class="hljs-built_in">t</span>;seconds = <span class="hljs-built_in">second</span> % <span class="hljs-built_in">t</span>;cout &lt;&lt; <span class="hljs-built_in">second</span> &lt;&lt; <span class="hljs-string">&quot; seconds = &quot;</span> &lt;&lt; <span class="hljs-built_in">days</span> &lt;&lt; <span class="hljs-string">&quot; days, &quot;</span> &lt;&lt; hours &lt;&lt; <span class="hljs-string">&quot; hours, &quot;</span> &lt;&lt; minutes &lt;&lt; <span class="hljs-string">&quot; minutes, &quot;</span> &lt;&lt; seconds &lt;&lt; <span class="hljs-string">&quot; seconds .&quot;</span> &lt;&lt; endl;return <span class="hljs-number">0</span>;&#125;*/</code></pre><h2 id="第五题，美国人口占比计算；ok，注意精度；"><a href="#第五题，美国人口占比计算；ok，注意精度；" class="headerlink" title="//第五题，美国人口占比计算；ok，注意精度；"></a>//第五题，美国人口占比计算；ok，注意精度；</h2><pre><code class="hljs coq">/*#include&lt;iostream&gt;int main()&#123;<span class="hljs-built_in">using</span> namespace std;long long world, US;long <span class="hljs-built_in">double</span> percentage;cout &lt;&lt; <span class="hljs-string">&quot;Enter the world&#x27;s population: &quot;</span>;cin &gt;&gt; world;cout &lt;&lt; <span class="hljs-string">&quot;Enter the population of the US: &quot;</span>;cin &gt;&gt; US;percentage = long <span class="hljs-built_in">double</span>(US) / long <span class="hljs-built_in">double</span>(world);cout &lt;&lt; <span class="hljs-string">&quot;the population of the US is &quot;</span> &lt;&lt; <span class="hljs-number">100</span>*percentage &lt;&lt; <span class="hljs-string">&quot;% of the world population. &quot;</span> &lt;&lt; endl;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*/</code></pre><p>//第六题，耗油量的计算；ok，变量的表达；</p><pre><code class="hljs smalltalk">/*<span class="hljs-symbol">#include</span>&lt;iostream&gt;int main(void)&#123;using namespace std;double mile, gallon, per, fuel_in_liter, distance_in_kilometer, fuel_consume;cout &lt;&lt; <span class="hljs-comment">&quot;Enter the length in miles: &quot;</span>;cin &gt;&gt; mile;cout &lt;&lt; <span class="hljs-comment">&quot;Enter the consumption of gasoline in gallon: &quot;</span>;cin &gt;&gt; gallon;per = mile / gallon;cout &lt;&lt; <span class="hljs-comment">&quot;the consumption of gasoline per gallon is &quot;</span> &lt;&lt; per &lt;&lt; endl;cout &lt;&lt; <span class="hljs-comment">&quot;Enter the distance in kilometer: &quot;</span>;cin &gt;&gt; distance_in_kilometer;cout &lt;&lt; <span class="hljs-comment">&quot;Enter the fuel consume in liter: &quot;</span>;cin &gt;&gt; fuel_in_liter;fuel_consume = (fuel_in_liter / distance_in_kilometer) * <span class="hljs-number">100</span>;cout &lt;&lt; <span class="hljs-comment">&quot;the consumption is &quot;</span> &lt;&lt; fuel_consume &lt;&lt; <span class="hljs-comment">&quot; L/100km. &quot;</span> &lt;&lt; endl;return <span class="hljs-number">0</span>;&#125;*/</code></pre><h2 id="第七题，问题在于计算的公式不对；算法一定要符合题目的意思；"><a href="#第七题，问题在于计算的公式不对；算法一定要符合题目的意思；" class="headerlink" title="//第七题，问题在于计算的公式不对；算法一定要符合题目的意思；"></a>//第七题，问题在于计算的公式不对；算法一定要符合题目的意思；</h2><pre><code class="hljs nim">/*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-type">int</span> main(<span class="hljs-type">void</span>)&#123;<span class="hljs-keyword">using</span> namespace std;double esumption , asumption;<span class="hljs-keyword">const</span> double a = <span class="hljs-number">62</span>.<span class="hljs-number">14</span>;<span class="hljs-keyword">const</span> double b = <span class="hljs-number">3</span>.<span class="hljs-number">785</span>;cout &lt;&lt; <span class="hljs-string">&quot;Enter the consumption of gallon of the car : &quot;</span>;cin &gt;&gt; esumption;asumption = a*b/esumption;cout &lt;&lt; <span class="hljs-string">&quot;After translated , the consumption of gallon of the car is: &quot;</span> &lt;&lt; asumption &lt;&lt; endl;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*/</code></pre><h2 id="字符输出的两种表达；"><a href="#字符输出的两种表达；" class="headerlink" title="//字符输出的两种表达；"></a>//字符输出的两种表达；</h2><pre><code class="hljs nim">/*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-type">int</span> main(<span class="hljs-type">void</span>)&#123;<span class="hljs-keyword">using</span> namespace std;cout &lt;&lt; <span class="hljs-type">char</span>(<span class="hljs-number">6</span>) &lt;&lt; endl;cout.put(<span class="hljs-number">6</span>);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*/</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="C++" scheme="https://uncleleiy.github.io/categories/C/"/>
    
    
    <category term="C++" scheme="https://uncleleiy.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++ 简单学习记录(1)</title>
    <link href="https://uncleleiy.github.io/2023/06/24/blog-17-C/"/>
    <id>https://uncleleiy.github.io/2023/06/24/blog-17-C/</id>
    <published>2023-06-24T12:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-学习笔记"><a href="#C-学习笔记" class="headerlink" title="C++学习笔记"></a>C++学习笔记</h1><h2 id="number-1-show-your-name-and-address-directly"><a href="#number-1-show-your-name-and-address-directly" class="headerlink" title="//number 1: show your name and address directly;"></a>//number 1: show your name and address directly;</h2><pre><code class="hljs powershell">/*<span class="hljs-comment">#include &lt;iostream&gt;</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;cout &lt;&lt; <span class="hljs-string">&quot;enter your name:XX&quot;</span> &lt;&lt; endl;cout &lt;&lt; <span class="hljs-string">&quot;enter your address:YY&quot;</span> &lt;&lt; endl;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;*/ //第一题ok；</code></pre><h2 id="number-2-about-multipilcation"><a href="#number-2-about-multipilcation" class="headerlink" title="//number 2: about multipilcation;"></a>//number 2: about multipilcation;</h2><pre><code class="hljs perl">/*<span class="hljs-comment">#include &lt;iostream&gt;</span>using namespace std;<span class="hljs-keyword">int</span> tranfer(<span class="hljs-keyword">int</span> k);<span class="hljs-keyword">int</span> main()&#123;cout &lt;&lt; <span class="hljs-string">&quot;enter long =&quot;</span>;<span class="hljs-keyword">int</span> <span class="hljs-keyword">x</span>;cin &gt;&gt; <span class="hljs-keyword">x</span>;<span class="hljs-keyword">int</span> <span class="hljs-keyword">ma</span> = tranfer(<span class="hljs-keyword">x</span>);cout &lt;&lt; <span class="hljs-string">&quot;after transfered , the answer is ma =&quot;</span> &lt;&lt; <span class="hljs-keyword">ma</span> &lt;&lt; endl;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-keyword">int</span> tranfer(<span class="hljs-keyword">int</span> k)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">220</span> * k;&#125;*<span class="hljs-regexp">/</span><span class="hljs-regexp">/</span>/第二题可以直接在cout后面使用乘法输出<span class="hljs-number">220</span>*K；无需调用自定义乘法函数；</code></pre><h2 id="number-3-call-functions"><a href="#number-3-call-functions" class="headerlink" title="//number 3: call functions;"></a>//number 3: call functions;</h2><pre><code class="hljs fsharp"><span class="hljs-operator">/*</span>#include <span class="hljs-operator">&lt;</span>iostream<span class="hljs-operator">&gt;</span><span class="hljs-built_in">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-keyword">void</span> f1(<span class="hljs-keyword">void</span>);<span class="hljs-keyword">void</span> f2(<span class="hljs-keyword">void</span>);int main(<span class="hljs-keyword">void</span>)&#123; f1(); f1(); f2(); f2();<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-keyword">void</span> f1(<span class="hljs-keyword">void</span>)&#123;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;three blind mice .&quot;</span> <span class="hljs-operator">&lt;&lt;</span> endl;&#125;<span class="hljs-keyword">void</span> f2(<span class="hljs-keyword">void</span>)&#123;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;see how they run .&quot;</span> <span class="hljs-operator">&lt;&lt;</span> endl;&#125;<span class="hljs-operator">*/</span><span class="hljs-comment">//第三题直接调用无返回值的函数，调用的时候只需要写出函数名和括号，比如此题中的 f2();</span></code></pre><h2 id="number-4-calculate-the-age-of-mouth"><a href="#number-4-calculate-the-age-of-mouth" class="headerlink" title="//number 4 :calculate the age of mouth;"></a>//number 4 :calculate the age of mouth;</h2><pre><code class="hljs excel">/*#include &lt;iostream&gt;using namespace std;<span class="hljs-built_in">int</span> main()&#123;cout &lt;&lt; <span class="hljs-string">&quot;enter your age : &quot;</span>;<span class="hljs-built_in">int</span> age;cin &gt;&gt; age;<span class="hljs-built_in">int</span> <span class="hljs-built_in">month</span>;<span class="hljs-built_in">month</span> = age * <span class="hljs-number">12</span>;cout &lt;&lt; <span class="hljs-string">&quot;your age include : &quot;</span> &lt;&lt; <span class="hljs-built_in">month</span> &lt;&lt; <span class="hljs-string">&quot; months&quot;</span>;return <span class="hljs-number">0</span>;&#125;*///第四题与第二题类似；在cout中直接计算后输出；</code></pre><h2 id="number-5-：tranfer-the-temperature"><a href="#number-5-：tranfer-the-temperature" class="headerlink" title="//number 5 ：tranfer the temperature;"></a>//number 5 ：tranfer the temperature;</h2><pre><code class="hljs coq">/*#include &lt;iostream&gt;<span class="hljs-built_in">using</span> namespace std;<span class="hljs-built_in">double</span> tranfer(<span class="hljs-built_in">double</span> x);int main()&#123;cout &lt;&lt; <span class="hljs-string">&quot;Please enter a Celsius value: &quot;</span>;<span class="hljs-built_in">double</span> m;cin &gt;&gt; m;<span class="hljs-built_in">double</span> n = tranfer(m);cout &lt;&lt; m &lt;&lt; <span class="hljs-string">&quot; degrees Celsius is &quot;</span> &lt;&lt; n &lt;&lt; <span class="hljs-string">&quot; degrees Fahrenheit.&quot;</span> &lt;&lt; endl;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-built_in">double</span> tranfer(<span class="hljs-built_in">double</span> x)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1.8</span> * x + <span class="hljs-number">32.0</span>;&#125;*///第五题ok；</code></pre><h2 id="number-6-light-year-transfer"><a href="#number-6-light-year-transfer" class="headerlink" title="//number 6 : light year transfer;"></a>//number 6 : light year transfer;</h2><pre><code class="hljs coq">/*#include &lt;iostream&gt;<span class="hljs-built_in">using</span> namespace std;<span class="hljs-built_in">double</span> trans(<span class="hljs-built_in">double</span> x);int main()&#123;cout &lt;&lt; <span class="hljs-string">&quot;enter the number of night years : &quot;</span>;<span class="hljs-built_in">double</span> year;cin &gt;&gt; year;<span class="hljs-built_in">double</span> units = trans(year);cout &lt;&lt; year &lt;&lt; <span class="hljs-string">&quot; light years = &quot;</span> &lt;&lt; units &lt;&lt; <span class="hljs-string">&quot; astronomical units. &quot;</span>;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-built_in">double</span> trans(<span class="hljs-built_in">double</span> x)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">63240</span> * x ;&#125;*///第六题ok；转换的英语单词是convert；</code></pre><h2 id="number-7-show-the-hours-and-the-minutes"><a href="#number-7-show-the-hours-and-the-minutes" class="headerlink" title="//number 7 : show the hours and the minutes ;"></a>//number 7 : show the hours and the minutes ;</h2><pre><code class="hljs fsharp"><span class="hljs-operator">/*</span>#include <span class="hljs-operator">&lt;</span>iostream<span class="hljs-operator">&gt;</span><span class="hljs-built_in">using</span> <span class="hljs-keyword">namespace</span> std;int main()&#123;int m;int n;cin <span class="hljs-operator">&gt;&gt;</span> m;    cin <span class="hljs-operator">&gt;&gt;</span> n;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot; enter the number of hours : &quot;</span> <span class="hljs-operator">&lt;&lt;</span> m <span class="hljs-operator">&lt;&lt;</span> endl;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot; enter the number of minutes : &quot;</span> <span class="hljs-operator">&lt;&lt;</span> n <span class="hljs-operator">&lt;&lt;</span> endl;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot; time : &quot;</span> <span class="hljs-operator">&lt;&lt;</span> m <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;:&quot;</span> <span class="hljs-operator">&lt;&lt;</span> n ;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-operator">*/</span><span class="hljs-comment">//第七题改写如下：</span><span class="hljs-comment">//number 7 : show the hours and the minutes ;</span><span class="hljs-operator">/*</span>#include <span class="hljs-operator">&lt;</span>iostream<span class="hljs-operator">&gt;</span><span class="hljs-built_in">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-keyword">void</span> <span class="hljs-keyword">function</span>(<span class="hljs-keyword">void</span>);int main(<span class="hljs-keyword">void</span>)&#123;<span class="hljs-keyword">function</span>();&#125;<span class="hljs-keyword">void</span> <span class="hljs-keyword">function</span>(<span class="hljs-keyword">void</span>)&#123;int m;int n;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;enter the number of hours : &quot;</span>;cin <span class="hljs-operator">&gt;&gt;</span> m;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;enter the number of minutes : &quot;</span>;cin <span class="hljs-operator">&gt;&gt;</span> n;cout <span class="hljs-operator">&lt;&lt;</span><span class="hljs-string">&quot;time ：&quot;</span> <span class="hljs-operator">&lt;&lt;</span> m <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;:&quot;</span> <span class="hljs-operator">&lt;&lt;</span> n;&#125;<span class="hljs-operator">*/</span><span class="hljs-comment">//第七题ok；输入函数应该在main函数里面，调用函数显示时间，修改如下：</span><span class="hljs-comment">//number 7 : show the hours and the minutes ;</span><span class="hljs-operator">/*</span>#include <span class="hljs-operator">&lt;</span>iostream<span class="hljs-operator">&gt;</span><span class="hljs-built_in">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-keyword">void</span> display(int a, int b);int main()&#123;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;enter the number of hours : &quot;</span>;int m;cin <span class="hljs-operator">&gt;&gt;</span> m;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;enter the number of minutes : &quot;</span>;int n;cin <span class="hljs-operator">&gt;&gt;</span> n;display(m, n);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-keyword">void</span> display(int a, int b)&#123;cout <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;time : &quot;</span> <span class="hljs-operator">&lt;&lt;</span> a <span class="hljs-operator">&lt;&lt;</span> <span class="hljs-string">&quot;:&quot;</span> <span class="hljs-operator">&lt;&lt;</span> b <span class="hljs-operator">&lt;&lt;</span> endl;&#125;<span class="hljs-operator">*/</span><span class="hljs-comment">//第七题完美解决，加油！！！</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="C++" scheme="https://uncleleiy.github.io/categories/C/"/>
    
    
    <category term="C++" scheme="https://uncleleiy.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>python 学习记录(11-20)</title>
    <link href="https://uncleleiy.github.io/2023/06/14/blog-6-python/"/>
    <id>https://uncleleiy.github.io/2023/06/14/blog-6-python/</id>
    <published>2023-06-14T13:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python-学习记录"><a href="#python-学习记录" class="headerlink" title="python 学习记录"></a>python 学习记录</h1><h2 id="11-1-input-函数"><a href="#11-1-input-函数" class="headerlink" title="11.1 input()函数"></a>11.1 input()函数</h2><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;how old are you ?&quot;</span>, end=<span class="hljs-string">&#x27; &#x27;</span>)age = <span class="hljs-built_in">input</span>()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;how tall are you ?&quot;</span>, end=<span class="hljs-string">&#x27; &#x27;</span>)height = <span class="hljs-built_in">input</span>()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;how much do you weight ?&quot;</span>, end=<span class="hljs-string">&#x27; &#x27;</span>)weight = <span class="hljs-built_in">input</span>()<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ok , you&#x27;re <span class="hljs-subst">&#123;age&#125;</span> years old, <span class="hljs-subst">&#123;height&#125;</span> cm tall and <span class="hljs-subst">&#123;weight&#125;</span> kg heavy.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># my own test one</span>add = <span class="hljs-string">&quot;+&quot;</span>minus = <span class="hljs-string">&quot;-&quot;</span>mutiply = <span class="hljs-string">&quot;*&quot;</span>division = <span class="hljs-string">&quot;/&quot;</span>addwithadd = add * <span class="hljs-number">75</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&quot;&quot;calculation preparing now ......</span><span class="hljs-string"><span class="hljs-subst">&#123;addwithadd&#125;</span>&quot;&quot;&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;here you input the first number : &quot;</span>,end=<span class="hljs-string">&#x27; &#x27;</span>)a = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;here you input the second number : &quot;</span>,end=<span class="hljs-string">&#x27; &#x27;</span>)b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> <span class="hljs-subst">&#123;add&#125;</span> <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>,a + b)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> <span class="hljs-subst">&#123;minus&#125;</span> <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>,a - b)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> <span class="hljs-subst">&#123;mutiply&#125;</span> <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>,a * b)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> <span class="hljs-subst">&#123;division&#125;</span> <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>,a / b)</code></pre><pre><code class="hljs coffeescript"><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span><span class="hljs-comment">how old are you ? 23</span><span class="hljs-comment">how tall are you ? 165</span><span class="hljs-comment">how much do you weight ? 96</span><span class="hljs-comment">ok , you&#x27;re 23 years old, 165 cm tall and 96 kg heavy.</span><span class="hljs-comment">###</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span>calculation preparing now ......+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++here you input the first number :  <span class="hljs-number">23</span>here you input the second number :  <span class="hljs-number">65</span><span class="hljs-number">23</span> + <span class="hljs-number">65</span> =  <span class="hljs-number">88</span><span class="hljs-number">23</span> - <span class="hljs-number">65</span> =  <span class="hljs-number">-42</span><span class="hljs-number">23</span> * <span class="hljs-number">65</span> =  <span class="hljs-number">1495</span><span class="hljs-number">23</span> / <span class="hljs-number">65</span> =  <span class="hljs-number">0.35384615384615387</span></code></pre><h2 id="12-1-input-函数与提示"><a href="#12-1-input-函数与提示" class="headerlink" title="12.1 input()函数与提示"></a>12.1 input()函数与提示</h2><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span>age = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;How old are you? &quot;</span>)height = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;How tall are you? &quot;</span>)weight = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;How much do you weight? &quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Yeah , you&#x27;re <span class="hljs-subst">&#123;age&#125;</span> years old, <span class="hljs-subst">&#123;height&#125;</span> cm tall and <span class="hljs-subst">&#123;weight&#125;</span> kg heavy.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># my own test one</span>question = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;only number can be input? &quot;</span>)unknown = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;still need time to study...&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;the answer maybe I get : <span class="hljs-subst">&#123;question&#125;</span> , <span class="hljs-subst">&#123;unknown&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;actully, input-function can input not only about numbers but also some strings that you put in !&quot;</span>)</code></pre><pre><code class="hljs coffeescript"><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span><span class="hljs-comment">How old are you? 23</span><span class="hljs-comment">How tall are you? 165</span><span class="hljs-comment">How much do you weight? 46</span><span class="hljs-comment">Yeah , you&#x27;re 23 years old, 165 cm tall and 46 kg heavy.</span><span class="hljs-comment">###</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span>only number can be input? <span class="hljs-number">66</span>still need time to study...the answer maybe I get : <span class="hljs-number">66</span> ,actully, input-function can input <span class="hljs-keyword">not</span> only about numbers but also some strings that you put <span class="hljs-keyword">in</span> !</code></pre><h2 id="13-1-引入三个参数并打印"><a href="#13-1-引入三个参数并打印" class="headerlink" title="13.1 引入三个参数并打印"></a>13.1 引入三个参数并打印</h2><blockquote><p>python3  ex13.1.py  0 1 2</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv<span class="hljs-comment"># read the WYSS section for how to run this </span>script, first, second, third = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;the script is called:&quot;</span>, script)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;your first variable is:&quot;</span>, first)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;your second variable is:&quot;</span>, second)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;your third variable is:&quot;</span>, third)</code></pre><pre><code class="hljs applescript"><span class="hljs-keyword">the</span> <span class="hljs-keyword">script</span> <span class="hljs-keyword">is</span> called: ex13<span class="hljs-number">.1</span>.pyyour <span class="hljs-keyword">first</span> variable <span class="hljs-keyword">is</span>: <span class="hljs-number">0</span>your <span class="hljs-keyword">second</span> variable <span class="hljs-keyword">is</span>: <span class="hljs-number">1</span>your <span class="hljs-keyword">third</span> variable <span class="hljs-keyword">is</span>: <span class="hljs-number">2</span></code></pre><h3 id="13-2-引入两个参数并打印"><a href="#13-2-引入两个参数并打印" class="headerlink" title="13.2 引入两个参数并打印"></a>13.2 引入两个参数并打印</h3><blockquote><p>python3  ex13.1.py  left right</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv<span class="hljs-comment"># read the wyss section for how to run this</span>script, a, b = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;the script is called:&quot;</span>, script)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;your first variable is:&quot;</span>, a)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;your second variable is:&quot;</span>, b)<span class="hljs-comment">#    script, a, b = argv</span><span class="hljs-comment">#    ValueError: too many values to unpack (expected 3)</span><span class="hljs-comment">#    error from the first name: &lt;script&gt; ,it&#x27;s not an argument ! ! !</span></code></pre><pre><code class="hljs vim">the script <span class="hljs-keyword">is</span> called: ex13.<span class="hljs-number">2</span>.<span class="hljs-keyword">py</span>your <span class="hljs-keyword">first</span> variable <span class="hljs-keyword">is</span>: <span class="hljs-keyword">left</span>your second variable <span class="hljs-keyword">is</span>: <span class="hljs-keyword">right</span></code></pre><h3 id="13-3-输入四个参数并打印"><a href="#13-3-输入四个参数并打印" class="headerlink" title="13.3 输入四个参数并打印"></a>13.3 输入四个参数并打印</h3><blockquote><p>python3  ex13.3.py  i m n o</p></blockquote><pre><code class="hljs python"><span class="hljs-comment"># from sys import it (wrong !)</span><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, a, b, c, d = argv<span class="hljs-built_in">print</span>(script)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a = &quot;</span>,a)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;b = &quot;</span>,b)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c = &quot;</span>,c)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d = &quot;</span>,d)<span class="hljs-comment"># ImportError: cannot import name &#x27;it&#x27; from &#x27;sys&#x27; (unknown location)</span><span class="hljs-comment"># error from the name of &lt;it&gt;, this argument must be &lt;argv&gt;, defined by system ! ! !</span></code></pre><pre><code class="hljs abnf">ex13.<span class="hljs-number">3</span>.py<span class="hljs-attribute">a</span> <span class="hljs-operator">=</span>  i<span class="hljs-attribute">b</span> <span class="hljs-operator">=</span>  m<span class="hljs-attribute">c</span> <span class="hljs-operator">=</span>  n<span class="hljs-attribute">d</span> <span class="hljs-operator">=</span>  o</code></pre><h3 id="13-4-输入两个参数并做四则运算"><a href="#13-4-输入两个参数并做四则运算" class="headerlink" title="13.4 输入两个参数并做四则运算"></a>13.4 输入两个参数并做四则运算</h3><blockquote><p>python3  ex13.4.py  20  40</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, a, b = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;this script is: <span class="hljs-subst">&#123;script&#125;</span>, It&#x27;s used to do some calculations !&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a + b =&quot;</span>, <span class="hljs-built_in">int</span>(a) + <span class="hljs-built_in">int</span>(b))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a - b =&quot;</span>, <span class="hljs-built_in">int</span>(a) - <span class="hljs-built_in">int</span>(b))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a * b =&quot;</span>, <span class="hljs-built_in">int</span>(a) * <span class="hljs-built_in">int</span>(b))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a / b =&quot;</span>, <span class="hljs-built_in">int</span>(a) / <span class="hljs-built_in">int</span>(b))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span>c = <span class="hljs-built_in">input</span>()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a * b / c&quot;</span>,<span class="hljs-built_in">int</span>(a) * <span class="hljs-built_in">int</span>(b) / <span class="hljs-built_in">int</span>(c))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># TypeError: unsupported operand type(s) for -: &#x27;str&#x27; and &#x27;str&#x27;</span><span class="hljs-comment"># how to solve ---&gt;  let &quot;a&quot; convert int : int(a)</span><span class="hljs-comment"># SyntaxError: unterminated string literal (detected at line 8)</span><span class="hljs-comment"># how to solve : add &lt;&quot;&gt; in the end </span></code></pre><pre><code class="hljs clean">###########################################################################a + b = <span class="hljs-number">60</span>a - b = <span class="hljs-number">-20</span>a * b = <span class="hljs-number">800</span>a / b = <span class="hljs-number">0.5</span>###########################################################################<span class="hljs-number">20</span>a * b / c <span class="hljs-number">40.0</span>###########################################################################</code></pre><h2 id="14-1-询问个人信息并打印"><a href="#14-1-询问个人信息并打印" class="headerlink" title="14.1 询问个人信息并打印"></a>14.1 询问个人信息并打印</h2><blockquote><p>python3  ex14.1.py  leigeigei</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, user_name = argvprompt = <span class="hljs-string">&#x27;&gt; &#x27;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;hello <span class="hljs-subst">&#123;user_name&#125;</span>, I&#x27;m the <span class="hljs-subst">&#123;script&#125;</span> script.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I&#x27;d like to ask you a few questions.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Do you like me, <span class="hljs-subst">&#123;user_name&#125;</span>?&quot;</span>)likes = <span class="hljs-built_in">input</span>(prompt)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Where do you live, <span class="hljs-subst">&#123;user_name&#125;</span>?&quot;</span>)lives = <span class="hljs-built_in">input</span>(prompt)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;What kind of computer do you have?&quot;</span>)computer = <span class="hljs-built_in">input</span>(prompt)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&quot;&quot;</span><span class="hljs-string">Alright, so you said <span class="hljs-subst">&#123;likes&#125;</span> about liking me.</span><span class="hljs-string">You live in <span class="hljs-subst">&#123;lives&#125;</span>. Not sure where that is.</span><span class="hljs-string">And you have a <span class="hljs-subst">&#123;computer&#125;</span> computer. Nice.</span><span class="hljs-string">&quot;&quot;&quot;</span>)</code></pre><pre><code class="hljs vbnet">hello leigeigei, I<span class="hljs-comment">&#x27;m the ex14.1.py script.</span>I<span class="hljs-comment">&#x27;d like to ask you a few questions.</span><span class="hljs-keyword">Do</span> you <span class="hljs-built_in">like</span> <span class="hljs-keyword">me</span>, leigeigei?&gt; yes<span class="hljs-keyword">Where</span> <span class="hljs-keyword">do</span> you live, leigeigei?&gt; cqWhat kind <span class="hljs-keyword">of</span> computer <span class="hljs-keyword">do</span> you have?&gt; legionAlright, so you said yes about liking <span class="hljs-keyword">me</span>.You live <span class="hljs-keyword">in</span> cq. <span class="hljs-built_in">Not</span> sure <span class="hljs-keyword">where</span> that <span class="hljs-built_in">is</span>.<span class="hljs-built_in">And</span> you have a legion computer. Nice.</code></pre><h3 id="14-2-询问密码账号并返回"><a href="#14-2-询问密码账号并返回" class="headerlink" title="14.2 询问密码账号并返回"></a>14.2 询问密码账号并返回</h3><blockquote><p>python3  ex14.2.py  leigeigei</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, user_name = argvprompt = <span class="hljs-string">&quot;--&gt; &quot;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;THIS IS THE LOG IN SYSTEM &amp; VERSION14.2: <span class="hljs-subst">&#123;script&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">50</span>) <span class="hljs-comment">#####</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;please enter your user_name: <span class="hljs-subst">&#123;user_name&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;please enter your QQnumber: <span class="hljs-subst">&#123;user_name&#125;</span>&quot;</span>)QQnumber = <span class="hljs-built_in">input</span>(prompt)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;please enter your QQkey: <span class="hljs-subst">&#123;user_name&#125;</span>&quot;</span>)QQkey = <span class="hljs-built_in">input</span>(prompt)x = <span class="hljs-string">&quot;*&quot;</span> * <span class="hljs-number">6</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&quot;&quot;WARNING: Make sure what you input is really true,</span><span class="hljs-string">or you can&#x27;t log in the system !</span><span class="hljs-string">user name: <span class="hljs-subst">&#123;user_name&#125;</span></span><span class="hljs-string">user QQnumber: <span class="hljs-subst">&#123;QQnumber&#125;</span></span><span class="hljs-string">user QQkey: <span class="hljs-subst">&#123;x&#125;</span>&quot;&quot;&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">50</span>) <span class="hljs-comment">#####</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;log in successfully !&quot;</span>)</code></pre><pre><code class="hljs coffeescript">THIS IS THE LOG IN SYSTEM &amp; VERSION14<span class="hljs-number">.2</span>: ex14<span class="hljs-number">.2</span>.py<span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">##</span>please enter your user_name: leigeigeiplease enter your QQnumber: leigeigei--&gt; <span class="hljs-number">2734972186</span>please enter your QQkey: leigeigei--&gt; i don<span class="hljs-string">&#x27;t want show my key to you</span><span class="hljs-string">WARNING: Make sure what you input is really true,</span><span class="hljs-string">or you can&#x27;</span>t log <span class="hljs-keyword">in</span> the system !user name: leigeigeiuser QQnumber: <span class="hljs-number">2734972186</span>user QQkey: ******<span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">##</span>log <span class="hljs-keyword">in</span> successfully !</code></pre><h2 id="15-1-读取文件"><a href="#15-1-读取文件" class="headerlink" title="15.1 读取文件"></a>15.1 读取文件</h2><blockquote><p>python3  ex15.1.py  ex15.txt</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argv<span class="hljs-comment"># open the file</span>txt = <span class="hljs-built_in">open</span>(filename)<span class="hljs-comment"># print the filename</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;here is the text file <span class="hljs-subst">&#123;filename&#125;</span>:&quot;</span>)<span class="hljs-comment"># read the file</span><span class="hljs-built_in">print</span>(txt.read())<span class="hljs-comment"># do once again</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;type the filename again:&quot;</span>)file_again = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;&gt; &quot;</span>)txt_again = <span class="hljs-built_in">open</span>(file_again)<span class="hljs-built_in">print</span>(txt_again.read())</code></pre><pre><code class="hljs erlang-repl">here is the text file ex15.txt:this is a text for testing !!!!!!    !!!       !!!       !!!!!!    !!!       !!!       !!!       !!!!!!    !type the filename again:&gt; ex15.txtthis is a text for testing !!!!!!    !!!       !!!       !!!!!!    !!!       !!!       !!!       !!!!!!    !</code></pre><h3 id="15-2-读取文件的测试"><a href="#15-2-读取文件的测试" class="headerlink" title="15.2 读取文件的测试"></a>15.2 读取文件的测试</h3><blockquote><p>python3  ex15.2.py  ex15.txt</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;THIS IS ONE NEW VERSION OF THE SCRIPT: &#123;filename&#125;&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Please enter the filename:&quot;</span>)files = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;____&quot;</span>)files = <span class="hljs-built_in">open</span>(files)<span class="hljs-built_in">print</span>(files.read())</code></pre><pre><code class="hljs erlang-repl">THIS IS ONE NEW VERSION OF THE SCRIPT: &#123;filename&#125;Please enter the filename:____ex15.txtthis is a text for testing !!!!!!    !!!       !!!       !!!!!!    !!!       !!!       !!!       !!!!!!    !</code></pre><blockquote><p>ex15.txt</p></blockquote><pre><code class="hljs erlang-repl">this is a text for testing !!!!!!    !!!       !!!       !!!!!!    !!!       !!!       !  !!       !!!!!!    !</code></pre><h2 id="16-1-删除文件内容后写入三行数据"><a href="#16-1-删除文件内容后写入三行数据" class="headerlink" title="16.1 删除文件内容后写入三行数据"></a>16.1 删除文件内容后写入三行数据</h2><blockquote><p> python3  ex16.1.py  ex16.txt</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argv <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;we&#x27;re going to erase <span class="hljs-subst">&#123;filename&#125;</span>.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;if you don&#x27;t want that, hit CTRL-C) (^C).&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;if you do want that, hit RETURN.&quot;</span>)<span class="hljs-comment"># input to make one useless choice ,whatever you type in the program will still execuite it&#x27;s command ,hhh</span><span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;?&quot;</span>)<span class="hljs-comment"># open file to the variable &#x27;target&#x27; and be ready to exec &#x27;write&#x27;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;opening the file...&quot;</span>)target = <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;w&#x27;</span>)<span class="hljs-comment"># delete the all content of the file that opened</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;truncating the file. goodbye!&quot;</span>)target.truncate()<span class="hljs-comment"># ask you to prepare for writing three lines </span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;now I&#x27;m going to ask you for three lines.&quot;</span>)line1 = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;line 1: &quot;</span>)line2 = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;line 2: &quot;</span>)line3 = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;line 3: &quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I&#x27;m going to write these to the file.&quot;</span>)<span class="hljs-comment"># execute the operation : &quot;write&quot;</span>target.write(line1)target.write(<span class="hljs-string">&quot;\n&quot;</span>)target.write(line2)target.write(<span class="hljs-string">&quot;\n&quot;</span>)target.write(line3)target.write(<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-comment"># close the file that you wrote in </span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;and finally, we close it.&quot;</span>)target.close()<span class="hljs-comment"># target = open(filename, &#x27;W&#x27;) ValueError: invalid mode: &#x27;W&#x27;</span><span class="hljs-comment"># Attention to the word you type in ! </span><span class="hljs-comment"># error from the writing W &amp;&amp; w ! </span><span class="hljs-comment"># target.wrtie(&quot;\n&quot;)</span><span class="hljs-comment"># AttributeError: &#x27;_io.TextIOWrapper&#x27; object has no attribute &#x27;wrtie&#x27;. Did you mean: &#x27;write&#x27;?</span><span class="hljs-comment"># error from the word I typed in &quot;wrtie&quot;, I should revise it to &quot;write&quot; !</span></code></pre><pre><code class="hljs vhdl">we<span class="hljs-symbol">&#x27;re</span> going <span class="hljs-keyword">to</span> erase ex16.txt.<span class="hljs-keyword">if</span> you don<span class="hljs-symbol">&#x27;t</span> want that, hit CTRL-C (^C).<span class="hljs-keyword">if</span> you do want that, hit <span class="hljs-keyword">RETURN</span>.?<span class="hljs-keyword">RETURN</span>opening the <span class="hljs-keyword">file</span>...truncating the <span class="hljs-keyword">file</span>. goodbye!now I<span class="hljs-symbol">&#x27;m</span> going <span class="hljs-keyword">to</span> ask you <span class="hljs-keyword">for</span> three lines.<span class="hljs-literal">line</span> <span class="hljs-number">1</span>: this <span class="hljs-keyword">is</span> ok<span class="hljs-literal">line</span> <span class="hljs-number">2</span>: I am fine<span class="hljs-literal">line</span> <span class="hljs-number">3</span>: I love youI<span class="hljs-symbol">&#x27;m</span> going <span class="hljs-keyword">to</span> write these <span class="hljs-keyword">to</span> the <span class="hljs-keyword">file</span>.<span class="hljs-keyword">and</span> finally, we close it.</code></pre><blockquote><p>ex16.txt:</p></blockquote><pre><code class="hljs kotlin"><span class="hljs-keyword">this</span> <span class="hljs-keyword">is</span> okI am fineI love you</code></pre><h3 id="16-2-文件写入和关闭测试"><a href="#16-2-文件写入和关闭测试" class="headerlink" title="16.2 文件写入和关闭测试"></a>16.2 文件写入和关闭测试</h3><blockquote><p> python3  ex16.2.py  ex16.txt</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Are you ready to add some words to <span class="hljs-subst">&#123;filename&#125;</span> ?&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;please type &lt;ok&gt;&quot;</span>)<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Take few time for you to think what to write...... &quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Opening the file ......&quot;</span>)tar = <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;w&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Here you can write: &quot;</span>)ok = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;---&gt;&quot;</span>)tar.write(ok)tar.write(<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Writing successfully !&quot;</span>)tar.close()<span class="hljs-comment"># the process can be summaried as follows :</span><span class="hljs-comment"># 1. open &lt;filename&gt; with &#x27;w&#x27; mode, and assign to &lt;tar&gt; </span><span class="hljs-comment"># 2. let &lt;ok&gt; get strings from outside</span><span class="hljs-comment"># 3. tar.write(ok): &lt;tar&gt; commands &#x27;write&#x27; to execute writing from &lt;ok&gt;</span><span class="hljs-comment"># 4. tar.close(): means to close the file that finished the writing process</span></code></pre><pre><code class="hljs livecodeserver">Are you ready <span class="hljs-built_in">to</span> <span class="hljs-built_in">add</span> some <span class="hljs-keyword">words</span> <span class="hljs-built_in">to</span> ex16.txt ?please type &lt;ok&gt;Take few <span class="hljs-built_in">time</span> <span class="hljs-keyword">for</span> you <span class="hljs-built_in">to</span> think what <span class="hljs-built_in">to</span> <span class="hljs-built_in">write</span>......Opening <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> ......Here you can <span class="hljs-built_in">write</span>:<span class="hljs-comment">---&gt; I wanna go</span>Writing successfully !</code></pre><blockquote><p> ex16.txt:</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">I</span> wanna go</code></pre><h3 id="16-3-读取文件的测试"><a href="#16-3-读取文件的测试" class="headerlink" title="16.3 读取文件的测试"></a>16.3 读取文件的测试</h3><blockquote><p> python3  ex16.3.py  ex16.txt</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;This is the file: <span class="hljs-subst">&#123;filename&#125;</span>&quot;</span>)x = <span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-built_in">input</span>(<span class="hljs-string">f&quot;sure to read this file? <span class="hljs-subst">&#123;x&#125;</span>&quot;</span>)tar = <span class="hljs-built_in">open</span>(filename, mode=<span class="hljs-string">&#x27;r&#x27;</span>)tar.seek(<span class="hljs-number">0</span>)y = tar.read()<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Well, let&#x27;s look at what the file include: <span class="hljs-subst">&#123;x&#125;</span><span class="hljs-subst">&#123;y&#125;</span>&quot;</span>)tar.close()</code></pre><pre><code class="hljs applescript">This <span class="hljs-keyword">is</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span>: ex16.txtsure <span class="hljs-keyword">to</span> <span class="hljs-built_in">read</span> this <span class="hljs-built_in">file</span>?okWell, let&#x27;s look <span class="hljs-keyword">at</span> what <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> include:I wanna go</code></pre><h3 id="16-4-有关write-close-read-seek-0-readline-truncate的测试"><a href="#16-4-有关write-close-read-seek-0-readline-truncate的测试" class="headerlink" title="16.4 有关write ,close, read, seek(0), readline, truncate的测试"></a>16.4 有关write ,close, read, seek(0), readline, truncate的测试</h3><blockquote><p> python3  ex16.4.py  ex16.txt</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">50</span>) <span class="hljs-comment">#####</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;This is the file: <span class="hljs-subst">&#123;filename&#125;</span>&quot;</span>)shift = <span class="hljs-string">&#x27;\n&#x27;</span>cursor = <span class="hljs-string">&#x27;--&gt; &#x27;</span><span class="hljs-built_in">input</span>(<span class="hljs-string">f&quot;Be sure to write some in the file? <span class="hljs-subst">&#123;shift&#125;</span><span class="hljs-subst">&#123;cursor&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;opening the file.....&quot;</span>)tar = <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;w&#x27;</span>)tar.write(<span class="hljs-built_in">input</span>(<span class="hljs-string">f&quot;Here you can write down what you want <span class="hljs-subst">&#123;shift&#125;</span><span class="hljs-subst">&#123;cursor&#125;</span>&quot;</span>))tar.close()<span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argvtar = <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;r&#x27;</span>)tar.seek(<span class="hljs-number">0</span>)out = tar.read()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;what did you write, let&#x27;s have a look, hhh&quot;</span>)<span class="hljs-built_in">print</span>(out)<span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, filename = argvtar = <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;r+&#x27;</span>)outline = tar.readline()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;what did you write , let&#x27;s have a look, hhh&quot;</span>)<span class="hljs-built_in">print</span>(outline)<span class="hljs-comment"># empties the file ! ! !</span>tar.truncate()tar.close<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;THIS PROGRAM IS RUNNING SUCCESSFULLY&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">50</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># error : tar.truncate() io.UnsupportedOperation: truncate</span><span class="hljs-comment"># how to solve : change &#x27;r&#x27; ---&gt; &#x27;r+&#x27;</span><span class="hljs-comment"># r : only read //if there is no file ,it will send error information</span><span class="hljs-comment"># r+: read and write //if there is no file ,it will send error information</span><span class="hljs-comment"># w : only write //this mode will delete the content before! //if there is no file ,it will create one </span><span class="hljs-comment"># w+: write and read //this mode will delete the content before! //if there is no file ,it will create one</span><span class="hljs-comment"># a : only write //this mode can write additional content!//if there is no file ,it will create one </span><span class="hljs-comment"># a+: write and read //this mode can write additional content!//if there is no file ,it will create one</span></code></pre><pre><code class="hljs coffeescript"><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">##</span>This <span class="hljs-keyword">is</span> the file: ex16.txtBe sure to write some <span class="hljs-keyword">in</span> the file?--&gt; <span class="hljs-literal">yes</span>opening the file.....Here you can write down what you want--&gt; I like herwhat did you write, let<span class="hljs-string">&#x27;s have a look, hhh</span><span class="hljs-string">I like her</span><span class="hljs-string">what did you write , let&#x27;</span>s have a look, hhhI like herTHIS PROGRAM IS RUNNING SUCCESSFULLY<span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">##</span></code></pre><blockquote><p>ex16.txt</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">I</span> love you</code></pre><h2 id="17-1-复制文件"><a href="#17-1-复制文件" class="headerlink" title="17.1 复制文件"></a>17.1 复制文件</h2><blockquote><p>python3  ex17.1.py  testin  testout</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv<span class="hljs-keyword">from</span> os.path <span class="hljs-keyword">import</span> existsscript, from_file, to_file = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;copying from <span class="hljs-subst">&#123;from_file&#125;</span> to <span class="hljs-subst">&#123;to_file&#125;</span>&quot;</span>)<span class="hljs-comment"># we could do these two on one line, how?</span>in_file = <span class="hljs-built_in">open</span>(from_file)indata = in_file.read()<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;the input file is <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(indata)&#125;</span> bytes long&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;does the output file exist? <span class="hljs-subst">&#123;exists(to_file)&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ready, hit RETURN to continue, CTRL-C to abort.&quot;</span>)<span class="hljs-built_in">input</span>()out_file = <span class="hljs-built_in">open</span>(to_file, <span class="hljs-string">&#x27;w&#x27;</span>)out_file.write(indata)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;alright, all done.&quot;</span>)out_file.close()in_file.close()</code></pre><pre><code class="hljs livecodeserver">copying <span class="hljs-built_in">from</span> testin <span class="hljs-built_in">to</span> testout<span class="hljs-keyword">the</span> input <span class="hljs-built_in">file</span> is <span class="hljs-number">17</span> <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">long</span>does <span class="hljs-keyword">the</span> output <span class="hljs-built_in">file</span> exist? Trueready, hit <span class="hljs-literal">RETURN</span> <span class="hljs-built_in">to</span> continue, CTRL-C <span class="hljs-built_in">to</span> abort.<span class="hljs-literal">RETURN</span>alright, all done.</code></pre><h3 id="17-2-复制文件"><a href="#17-2-复制文件" class="headerlink" title="17.2 复制文件"></a>17.2 复制文件</h3><blockquote><p>python3  ex17.2.py  testin  testout</p></blockquote><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv<span class="hljs-comment"># this is used to distinguish whether the &quot;newf&quot; exists ?</span><span class="hljs-keyword">from</span> os.path <span class="hljs-keyword">import</span> existsscript, dataf, newf = argvdata = <span class="hljs-built_in">open</span>(dataf).read()<span class="hljs-comment"># len(file) to find out length of the file</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;the datafile is <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(data)&#125;</span> bytes long&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;does the newfile file exist? <span class="hljs-subst">&#123;exists(newf)&#125;</span>&quot;</span>)tar = <span class="hljs-built_in">open</span>(newf, <span class="hljs-string">&#x27;w&#x27;</span>)tar.write(data)tar.close()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Copied file successfully !&quot;</span>)<span class="hljs-comment"># f = open(filename).read()</span><span class="hljs-comment"># ...</span><span class="hljs-comment"># f.close()</span><span class="hljs-comment"># AttributeError: &#x27;str&#x27; object has no attribute &#x27;close&#x27;</span><span class="hljs-comment"># here we can easily see the error information !</span><span class="hljs-comment"># because I can&#x27;t distinguish the difference between &quot;files&quot; and &quot;file variables&quot; !</span></code></pre><pre><code class="hljs livecodeserver"><span class="hljs-keyword">the</span> datafile is <span class="hljs-number">17</span> <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">long</span>does <span class="hljs-keyword">the</span> newfile <span class="hljs-built_in">file</span> exist? TrueCopied <span class="hljs-built_in">file</span> successfully !</code></pre><h3 id="17-3-使用分号简化代码行"><a href="#17-3-使用分号简化代码行" class="headerlink" title="17.3 使用分号简化代码行"></a>17.3 使用分号简化代码行</h3><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv<span class="hljs-keyword">from</span> os.path <span class="hljs-keyword">import</span> exists; script, dataf, newf = argvdata = <span class="hljs-built_in">open</span>(dataf).read()<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;the datafile is <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(data)&#125;</span> bytes long&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;does the newfile file exist? <span class="hljs-subst">&#123;exists(newf)&#125;</span>&quot;</span>)tar = <span class="hljs-built_in">open</span>(newf, <span class="hljs-string">&#x27;w&#x27;</span>); tar.write(data); tar.close()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Copied file successfully !&quot;</span>)<span class="hljs-comment"># f = open(filename).read()</span><span class="hljs-comment"># ...</span><span class="hljs-comment"># f.close()</span><span class="hljs-comment"># AttributeError: &#x27;str&#x27; object has no attribute &#x27;close&#x27;</span><span class="hljs-comment"># here we can easily see the error information !</span><span class="hljs-comment"># because I can&#x27;t distinguish the difference between &quot;files&quot; and &quot;file variables&quot; !</span></code></pre><pre><code class="hljs livecodeserver"><span class="hljs-keyword">the</span> datafile is <span class="hljs-number">17</span> <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">long</span>does <span class="hljs-keyword">the</span> newfile <span class="hljs-built_in">file</span> exist? TrueCopied <span class="hljs-built_in">file</span> successfully !</code></pre><blockquote><p>17.4 testin file</p></blockquote><pre><code class="hljs ada">THIS <span class="hljs-keyword">IS</span> <span class="hljs-keyword">FOR</span> TEST</code></pre><blockquote><p>17.4 testout file</p></blockquote><pre><code class="hljs ada">THIS <span class="hljs-keyword">IS</span> <span class="hljs-keyword">FOR</span> TEST</code></pre><h2 id="18-1-重定义print函数使其同时打印多个参数"><a href="#18-1-重定义print函数使其同时打印多个参数" class="headerlink" title="18.1 重定义print函数使其同时打印多个参数"></a>18.1 重定义print函数使其同时打印多个参数</h2><pre><code class="hljs python"><span class="hljs-comment"># this one is like your scripts with argv</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_two</span>(<span class="hljs-params">*args</span>):    arg1, arg2 = args    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;arg1: <span class="hljs-subst">&#123;arg1&#125;</span>, arg2: <span class="hljs-subst">&#123;arg2&#125;</span>&quot;</span>)    <span class="hljs-comment"># ok, that *args is actually pointless, we can just do this</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_two_again</span>(<span class="hljs-params">arg1, arg2</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;arg1: <span class="hljs-subst">&#123;arg1&#125;</span>, arg2: <span class="hljs-subst">&#123;arg2&#125;</span>&quot;</span>)    <span class="hljs-comment"># this just takes one argument</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_one</span>(<span class="hljs-params">arg1</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;arg1: <span class="hljs-subst">&#123;arg1&#125;</span>&quot;</span>)<span class="hljs-comment"># this one takes no argument</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_none</span>():    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I got nothing.&quot;</span>)     print_two(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;dear&quot;</span>)print_two_again(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;baby&quot;</span>)print_one(<span class="hljs-string">&quot;world&quot;</span>)print_none()   <span class="hljs-comment"># arg1, arg2 = args</span><span class="hljs-comment"># ValueError: not enough values to unpack (expected 2, got 1)</span><span class="hljs-comment"># error from the function : print_two(&quot;hello&quot;)</span><span class="hljs-comment"># I forgot to take out two values !</span></code></pre><pre><code class="hljs yaml"><span class="hljs-attr">arg1:</span> <span class="hljs-string">hello,</span> <span class="hljs-attr">arg2:</span> <span class="hljs-string">dear</span><span class="hljs-attr">arg1:</span> <span class="hljs-string">hello,</span> <span class="hljs-attr">arg2:</span> <span class="hljs-string">baby</span><span class="hljs-attr">arg1:</span> <span class="hljs-string">world</span><span class="hljs-string">I</span> <span class="hljs-string">got</span> <span class="hljs-string">nothing.</span></code></pre><h3 id="18-2-自定义print函数同时打印多个字符串"><a href="#18-2-自定义print函数同时打印多个字符串" class="headerlink" title="18.2 自定义print函数同时打印多个字符串"></a>18.2 自定义print函数同时打印多个字符串</h3><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">printssss</span>(<span class="hljs-params">*args</span>):    a, b, c, d = args    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;a: <span class="hljs-subst">&#123;a&#125;</span>, b: <span class="hljs-subst">&#123;b&#125;</span>, c: <span class="hljs-subst">&#123;c&#125;</span>, d: <span class="hljs-subst">&#123;d&#125;</span>&quot;</span>)<span class="hljs-comment"># show the difference of the two kinds of function</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;print(&quot;I&quot;, &quot;love&quot;, &quot;you&quot;, &quot;baby&quot;)&#x27;</span>)  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;love&quot;</span>, <span class="hljs-string">&quot;you&quot;</span>, <span class="hljs-string">&quot;baby&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;printssss(&quot;I&quot;, &quot;love&quot;, &quot;you&quot;, &quot;baby&quot;)&#x27;</span>)printssss(<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;love&quot;</span>, <span class="hljs-string">&quot;you&quot;</span>, <span class="hljs-string">&quot;baby&quot;</span>)</code></pre><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;love&quot;</span>, <span class="hljs-string">&quot;you&quot;</span>, <span class="hljs-string">&quot;baby&quot;</span>)</span></span>I love you baby<span class="hljs-function"><span class="hljs-title">printssss</span><span class="hljs-params">(<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;love&quot;</span>, <span class="hljs-string">&quot;you&quot;</span>, <span class="hljs-string">&quot;baby&quot;</span>)</span></span><span class="hljs-selector-tag">a</span>: I, <span class="hljs-selector-tag">b</span>: love, c: you, d: baby</code></pre><h2 id="19-1-定义新的函数通过多种方式打印不同参数"><a href="#19-1-定义新的函数通过多种方式打印不同参数" class="headerlink" title="19.1 定义新的函数通过多种方式打印不同参数"></a>19.1 定义新的函数通过多种方式打印不同参数</h2><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">cheese_and_crackers</span>(<span class="hljs-params">cheese_count, boxes_of_crackers</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;You have <span class="hljs-subst">&#123;cheese_count&#125;</span> cheeses!&quot;</span>)     <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;You have <span class="hljs-subst">&#123;boxes_of_crackers&#125;</span> boxes of crackers!&quot;</span>)     <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Man that&#x27;s enough for a party!&quot;</span>)     <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Get a blanket.\n&quot;</span>)    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;We can just give the function numbers directly: &quot;</span>)cheese_and_crackers(<span class="hljs-number">20</span>, <span class="hljs-number">30</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OR, we can use variables from our script: &quot;</span>)amounta = <span class="hljs-number">10</span>amountb = <span class="hljs-number">50</span>cheese_and_crackers(amounta, amountb)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;We can even do math inside too: &quot;</span>)cheese_and_crackers(<span class="hljs-number">10</span> + <span class="hljs-number">20</span>, <span class="hljs-number">5</span> + <span class="hljs-number">6</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;And we can combine the two, variables and math: &quot;</span>)cheese_and_crackers(amounta + <span class="hljs-number">6000</span>, amountb + <span class="hljs-number">1000</span>)</code></pre><pre><code class="hljs vbnet">We can just give the <span class="hljs-keyword">function</span> numbers directly:You have <span class="hljs-number">20</span> cheeses!You have <span class="hljs-number">30</span> boxes <span class="hljs-keyword">of</span> crackers!Man that<span class="hljs-comment">&#x27;s enough for a party!</span><span class="hljs-keyword">Get</span> a blanket.<span class="hljs-built_in">OR</span>, we can use variables <span class="hljs-keyword">from</span> our script:You have <span class="hljs-number">10</span> cheeses!You have <span class="hljs-number">50</span> boxes <span class="hljs-keyword">of</span> crackers!Man that<span class="hljs-comment">&#x27;s enough for a party!</span><span class="hljs-keyword">Get</span> a blanket.We can even <span class="hljs-keyword">do</span> math inside too:You have <span class="hljs-number">30</span> cheeses!You have <span class="hljs-number">11</span> boxes <span class="hljs-keyword">of</span> crackers!Man that<span class="hljs-comment">&#x27;s enough for a party!</span><span class="hljs-keyword">Get</span> a blanket.<span class="hljs-built_in">And</span> we can combine the two, variables <span class="hljs-built_in">and</span> math:You have <span class="hljs-number">6010</span> cheeses!You have <span class="hljs-number">1050</span> boxes <span class="hljs-keyword">of</span> crackers!Man that<span class="hljs-comment">&#x27;s enough for a party!</span><span class="hljs-keyword">Get</span> a blanket.</code></pre><h3 id="19-2-使用函数定义四则运算"><a href="#19-2-使用函数定义四则运算" class="headerlink" title="19.2 使用函数定义四则运算"></a>19.2 使用函数定义四则运算</h3><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">calculation</span>(<span class="hljs-params">a, b</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> + <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>, a + b)    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> - <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>, a - b)    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> * <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>, a * b)    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;a&#125;</span> / <span class="hljs-subst">&#123;b&#125;</span> = &quot;</span>, a / b)    a = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;please enter the first number: &quot;</span>))b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;please enter another one: &quot;</span>))calculation(a, b)</code></pre><pre><code class="hljs apache"><span class="hljs-attribute">please</span> enter the first number: <span class="hljs-number">666</span><span class="hljs-attribute">please</span> enter another one: <span class="hljs-number">999</span><span class="hljs-attribute">666</span> + <span class="hljs-number">999</span> =  <span class="hljs-number">1665</span><span class="hljs-attribute">666</span> - <span class="hljs-number">999</span> =  -<span class="hljs-number">333</span><span class="hljs-attribute">666</span> * <span class="hljs-number">999</span> =  <span class="hljs-number">665334</span><span class="hljs-attribute">666</span> / <span class="hljs-number">999</span> =  <span class="hljs-number">0</span>.<span class="hljs-number">6666666666666666</span></code></pre><h3 id="19-3-复制文件并在新文件中加入字符串"><a href="#19-3-复制文件并在新文件中加入字符串" class="headerlink" title="19.3 复制文件并在新文件中加入字符串"></a>19.3 复制文件并在新文件中加入字符串</h3><blockquote><p>python3  ex19.3.py  txt1  txt2</p></blockquote><pre><code class="hljs python"><span class="hljs-comment"># function TEST</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">TEST</span>(<span class="hljs-params">str1, str2</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">50</span>) <span class="hljs-comment">#####</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;this is the combination for str1 &amp;&amp; str2 : &quot;</span>)    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;str1&#125;</span>&quot;</span>)    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;str2&#125;</span>&quot;</span>)x = <span class="hljs-string">&#x27;\n&#x27;</span>str1 = <span class="hljs-string">&quot;HERE YOU CAN SEE WHAT I WANNA SAY !&quot;</span>str2 = <span class="hljs-string">&quot;THERE IS NO ANY CONTENT FOR THE PAGE!&quot;</span><span class="hljs-comment"># function copy</span><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, file1, file2 = argv<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ready to copy <span class="hljs-subst">&#123;file1&#125;</span> to <span class="hljs-subst">&#123;file2&#125;</span>....&quot;</span>)data = <span class="hljs-built_in">open</span>(file1).read()<span class="hljs-comment"># show what is in the file1 and add what you wanna say</span>TEST(str1, str2)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;file1 shows that: <span class="hljs-subst">&#123;x&#125;</span><span class="hljs-subst">&#123;data&#125;</span>&quot;</span>)y = <span class="hljs-built_in">input</span>(<span class="hljs-string">f&quot;here you can write to file2 <span class="hljs-subst">&#123;x&#125;</span>&quot;</span>)plusdata = data + str1 + x + str2 + x + yqiao = <span class="hljs-built_in">open</span>(file2, <span class="hljs-string">&#x27;w&#x27;</span>)qiao.write(plusdata)    qiao.close()  <span class="hljs-comment"># attention ! we need to close the &#x27;qiao&#x27;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;copy successfully !&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">50</span>) <span class="hljs-comment">#####</span></code></pre><pre><code class="hljs clean">ready to copy txt1 to txt2....##################################################this is the combination for str1 &amp;&amp; str2 :HERE YOU CAN SEE WHAT I WANNA SAY !THERE IS NO ANY CONTENT FOR THE PAGE!file1 shows that:Do you still remember the first time I met you ?here you can write to file2I miss ucopy successfully !##################################################</code></pre><blockquote><p>19.3 open new txt2:</p></blockquote><pre><code class="hljs css">Do you still remember the first <span class="hljs-selector-tag">time</span> <span class="hljs-selector-tag">I</span> met you ?HERE YOU CAN SEE WHAT <span class="hljs-selector-tag">I</span> WANNA SAY !THERE IS NO ANY <span class="hljs-attribute">CONTENT</span> FOR THE PAGE!<span class="hljs-selector-tag">I</span> miss u</code></pre><blockquote><p>txt1</p></blockquote><pre><code class="hljs coq">Do you still <span class="hljs-built_in">remember</span> the <span class="hljs-built_in">first</span> <span class="hljs-built_in">time</span> I met you ?</code></pre><blockquote><p>txt2</p></blockquote><pre><code class="hljs pgsql"><span class="hljs-keyword">Do</span> you still remember the first <span class="hljs-type">time</span> I met you ?HERE YOU CAN SEE WHAT I WANNA SAY !THERE <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NO</span> <span class="hljs-keyword">ANY</span> CONTENT <span class="hljs-keyword">FOR</span> THE PAGE!yes , come <span class="hljs-keyword">on</span> !</code></pre><h2 id="20-1-定义函数使其打印文本内容且显示行数"><a href="#20-1-定义函数使其打印文本内容且显示行数" class="headerlink" title="20.1 定义函数使其打印文本内容且显示行数"></a>20.1 定义函数使其打印文本内容且显示行数</h2><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, input_file = argv<span class="hljs-comment"># function to print input_file</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_all</span>(<span class="hljs-params">f</span>):    <span class="hljs-built_in">print</span>(f.read())    <span class="hljs-comment"># function to move the cursor to the start of the file</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">rewind</span>(<span class="hljs-params">f</span>):    f.seek(<span class="hljs-number">0</span>)<span class="hljs-comment"># function to print line count (number) and file</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_a_line</span>(<span class="hljs-params">line_count, f</span>):    <span class="hljs-built_in">print</span>(line_count, f.readline())    current_file = <span class="hljs-built_in">open</span>(input_file)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;first let&#x27;s print the whole file:\n&quot;</span>)print_all(current_file)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;now let&#x27;s rewind, kind of like a tape.&quot;</span>)rewind(current_file)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;let&#x27;s print three lines:&quot;</span>)current_line = <span class="hljs-number">1</span>print_a_line(current_line, current_file)current_line = current_line + <span class="hljs-number">1</span>print_a_line(current_line, current_file)current_line = current_line + <span class="hljs-number">1</span>print_a_line(current_line, current_file)</code></pre><pre><code class="hljs vbnet">first <span class="hljs-keyword">let</span><span class="hljs-comment">&#x27;s print the whole file:</span>THIS <span class="hljs-built_in">IS</span> JUST <span class="hljs-keyword">FOR</span> TESTTHIS <span class="hljs-built_in">IS</span> JUST <span class="hljs-keyword">FOR</span> TESTTHIS <span class="hljs-built_in">IS</span> JUST <span class="hljs-keyword">FOR</span> TESTnow <span class="hljs-keyword">let</span><span class="hljs-comment">&#x27;s rewind, kind of like a tape.</span><span class="hljs-keyword">let</span><span class="hljs-comment">&#x27;s print three lines:</span><span class="hljs-number">1</span> THIS <span class="hljs-built_in">IS</span> JUST <span class="hljs-keyword">FOR</span> TEST<span class="hljs-number">2</span> THIS <span class="hljs-built_in">IS</span> JUST <span class="hljs-keyword">FOR</span> TEST<span class="hljs-number">3</span> THIS <span class="hljs-built_in">IS</span> JUST <span class="hljs-keyword">FOR</span> TEST</code></pre><h3 id="20-2-定义函数复制文本参数且多行打印"><a href="#20-2-定义函数复制文本参数且多行打印" class="headerlink" title="20.2 定义函数复制文本参数且多行打印"></a>20.2 定义函数复制文本参数且多行打印</h3><pre><code class="hljs python"><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argvscript, infile = argv<span class="hljs-keyword">def</span> <span class="hljs-title function_">prints</span>(<span class="hljs-params">tar5</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;infile * 5 = &quot;</span>)    <span class="hljs-built_in">print</span>(tar5 * <span class="hljs-number">5</span>)<span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">def inputs():</span><span class="hljs-string">    input(&quot;here you can input one number: \n&quot;)</span><span class="hljs-string">    print(&quot;write successfully !&quot;)</span><span class="hljs-string">&#x27;&#x27;&#x27;</span>tar = <span class="hljs-built_in">open</span>(infile).read()<span class="hljs-comment"># something = inputs()</span>x = <span class="hljs-string">&#x27;\n&#x27;</span>tarfive = tar + xprints(tarfive)<span class="hljs-comment">## there I met something wrong !</span></code></pre><pre><code class="hljs sas"><span class="hljs-keyword">infile</span> <span class="hljs-comment">* 5 =</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment"></span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment"></span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment"></span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment"></span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment">THIS IS JUST FOR TEST</span><span class="hljs-comment"></span></code></pre><p><em>教程参考：learn python the hard way</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="python" scheme="https://uncleleiy.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://uncleleiy.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>wsl 备份问题</title>
    <link href="https://uncleleiy.github.io/2023/06/12/blog-5-wsl-debug/"/>
    <id>https://uncleleiy.github.io/2023/06/12/blog-5-wsl-debug/</id>
    <published>2023-06-12T08:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="备份乌班图子系统时出的一点小问题"><a href="#备份乌班图子系统时出的一点小问题" class="headerlink" title="备份乌班图子系统时出的一点小问题"></a>备份乌班图子系统时出的一点小问题</h1><pre><code class="hljs shell">C:\Users\uncle&gt;wsl -l -v  NAME            STATE           VERSION* Ubuntu-22.04    Running         2  Ubuntu-20.04    Stopped         2C:\Users\uncle&gt;shutdown Ubuntu-22.04 NAME            STATE           VERSION* Ubuntu-22.04    Stopped         2  Ubuntu-20.04    Stopped         2C:\Users\uncle&gt;wsl --export  Ubuntu-22.04 d:\linux拒绝访问。Error code: Wsl/E_ACCESSDENIED</code></pre><p>网上搜了一通，有人说是权限问题，我就用管理员身份打开了powershell，依旧无济于事……</p><p>后面才发觉，是输入的时候没有指定备份文件的名称（上次也没指定但是却可以……）</p><p>于是做以下修改：</p><pre><code class="hljs shell">C:\Users\uncle&gt;wsl --export  Ubuntu-22.04 d:\linux\Ubuntu-22.04.tar</code></pre><p>ok，问题解决，成功备份到D盘！</p><h4 id="关于文件压缩：http-sobereva-com-672"><a href="#关于文件压缩：http-sobereva-com-672" class="headerlink" title="关于文件压缩：http://sobereva.com/672"></a>关于文件压缩：<a target="_blank" rel="noopener" href="http://sobereva.com/672">http://sobereva.com/672</a></h4>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="debug" scheme="https://uncleleiy.github.io/categories/debug/"/>
    
    
    <category term="wsl" scheme="https://uncleleiy.github.io/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>python 学习记录(1-10)</title>
    <link href="https://uncleleiy.github.io/2023/06/11/blog-4-python/"/>
    <id>https://uncleleiy.github.io/2023/06/11/blog-4-python/</id>
    <published>2023-06-11T13:00:00.000Z</published>
    <updated>2023-07-10T14:14:51.057Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python-学习记录"><a href="#python-学习记录" class="headerlink" title="python 学习记录"></a>python 学习记录</h1><h2 id="1-打印字符串"><a href="#1-打印字符串" class="headerlink" title="1. 打印字符串"></a>1. 打印字符串</h2><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello world!&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello again&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I like typing this.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This is fun.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Yay! Printing.&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I&#x27;d much rather you &#x27;not&#x27;.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;I &quot;said&quot; do not touch this.&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;right?&quot;</span>)</code></pre><pre><code class="hljs erlang">hello world!hello againI like typing this.This is <span class="hljs-keyword">fun</span>.Yay! Printing.I&#x27;d much rather you &#x27;<span class="hljs-keyword">not</span>&#x27;.I <span class="hljs-string">&quot;said&quot;</span> do <span class="hljs-keyword">not</span> touch this.right?I could have code like this.this will run.</code></pre><h2 id="2-写注释"><a href="#2-写注释" class="headerlink" title="2. 写注释"></a>2. 写注释</h2><pre><code class="hljs python"><span class="hljs-comment"># A comment, this is so you can read your program later.</span><span class="hljs-comment"># Anything after the # is ignored by python</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I could have code like this.&quot;</span>)<span class="hljs-comment"># You can also use a vomment to &quot;disable&quot; or comment out code: print(&quot;this won&#x27;t run.&quot;)</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;this will run.&quot;</span>)</code></pre><pre><code class="hljs kotlin">I could have code like <span class="hljs-keyword">this</span>.<span class="hljs-keyword">this</span> will run.</code></pre><h2 id="3-四则运算"><a href="#3-四则运算" class="headerlink" title="3. 四则运算"></a>3. 四则运算</h2><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I will now count my chickens:&quot;</span>)         <span class="hljs-comment"># the title </span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hens&quot;</span>, <span class="hljs-number">25</span> + <span class="hljs-number">30</span> / <span class="hljs-number">6</span>)                     <span class="hljs-comment"># 30.0</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Roosters&quot;</span>, <span class="hljs-number">100</span> - <span class="hljs-number">25</span> * <span class="hljs-number">3</span> % <span class="hljs-number">4</span>)            <span class="hljs-comment"># 100 - 75 % 4 = 97</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Now I will count the eggs:&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-number">3</span> + <span class="hljs-number">2</span> + <span class="hljs-number">1</span> - <span class="hljs-number">5</span> + <span class="hljs-number">4</span> % <span class="hljs-number">2</span> - <span class="hljs-number">1</span> / <span class="hljs-number">4</span> + <span class="hljs-number">6</span>)       <span class="hljs-comment"># 7 - 1 / 4 = 6.75</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Is it true that 3 + 2 &lt; 5 - 7 ?&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-number">3</span> + <span class="hljs-number">2</span> &lt; <span class="hljs-number">5</span> - <span class="hljs-number">7</span>)                           <span class="hljs-comment"># False </span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;What is 3 + 2?&quot;</span>, <span class="hljs-number">3</span> + <span class="hljs-number">2</span>)                 <span class="hljs-comment"># 5</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;What is 5 - 7?&quot;</span>, <span class="hljs-number">5</span> - <span class="hljs-number">7</span>)                 <span class="hljs-comment"># -2</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Oh, that&#x27;s why it&#x27;s False.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;How about some more.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Is it greater?&quot;</span>, <span class="hljs-number">5</span> &gt; -<span class="hljs-number">2</span>)                <span class="hljs-comment"># True</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Is it greater or equal?&quot;</span>, <span class="hljs-number">5</span> &gt;= -<span class="hljs-number">2</span>)      <span class="hljs-comment"># True</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Is it less or equal?&quot;</span> , <span class="hljs-number">5</span> &lt;= -<span class="hljs-number">2</span>)        <span class="hljs-comment"># False</span><span class="hljs-comment"># my own test</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;change these numbers to float point:&quot;</span>)  <span class="hljs-comment"># calculate test</span><span class="hljs-built_in">print</span>(<span class="hljs-number">25.0</span> + <span class="hljs-number">30.0</span> / <span class="hljs-number">6</span>)                         <span class="hljs-comment"># 30.0 </span><span class="hljs-built_in">print</span>(<span class="hljs-number">7.0</span> - <span class="hljs-number">1.0</span> / <span class="hljs-number">4.0</span>)                         <span class="hljs-comment"># 6.75</span></code></pre><pre><code class="hljs applescript">I will now <span class="hljs-built_in">count</span> <span class="hljs-keyword">my</span> chickens:Hens <span class="hljs-number">30.0</span>Roosters <span class="hljs-number">97</span>Now I will <span class="hljs-built_in">count</span> <span class="hljs-keyword">the</span> eggs:<span class="hljs-number">6.75</span>Is <span class="hljs-keyword">it</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">that</span> <span class="hljs-number">3</span> + <span class="hljs-number">2</span> &lt; <span class="hljs-number">5</span> - <span class="hljs-number">7</span> ?FalseWhat <span class="hljs-keyword">is</span> <span class="hljs-number">3</span> + <span class="hljs-number">2</span>? <span class="hljs-number">5</span>What <span class="hljs-keyword">is</span> <span class="hljs-number">5</span> - <span class="hljs-number">7</span>? <span class="hljs-number">-2</span>Oh, <span class="hljs-keyword">that</span>&#x27;s why <span class="hljs-keyword">it</span>&#x27;s False.How <span class="hljs-keyword">about</span> <span class="hljs-keyword">some</span> more.Is <span class="hljs-keyword">it</span> greater? TrueIs <span class="hljs-keyword">it</span> greater <span class="hljs-keyword">or</span> <span class="hljs-keyword">equal</span>? TrueIs <span class="hljs-keyword">it</span> less <span class="hljs-keyword">or</span> <span class="hljs-keyword">equal</span>? Falsechange these numbers <span class="hljs-keyword">to</span> float point:<span class="hljs-number">30.0</span><span class="hljs-number">6.75</span></code></pre><h2 id="4-定义变量和引入计算"><a href="#4-定义变量和引入计算" class="headerlink" title="4. 定义变量和引入计算"></a>4. 定义变量和引入计算</h2><pre><code class="hljs python"><span class="hljs-comment"># calculate the cars and passengers</span>cars = <span class="hljs-number">100</span>space_in_a_car = <span class="hljs-number">4.0</span>drivers = <span class="hljs-number">30</span>passengers = <span class="hljs-number">90</span>cars_not_driven = cars - driverscars_driven = driverscarpool_capacity = cars_driven * space_in_a_caraverage_passengers_per_car = passengers / cars_driven<span class="hljs-comment"># show the result of the computation</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;there are&quot;</span>, cars, <span class="hljs-string">&quot;cars available.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;there are only&quot;</span>, drivers,<span class="hljs-string">&quot;drivers available.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;there will be&quot;</span>, cars_not_driven, <span class="hljs-string">&quot;empty cars today.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;we can transport&quot;</span>, carpool_capacity, <span class="hljs-string">&quot;people today.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;we have&quot;</span>, passengers, <span class="hljs-string">&quot;to carpool today.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;we need to put about&quot;</span>, average_passengers_per_car, <span class="hljs-string">&quot;in each car.&quot;</span>)<span class="hljs-comment"># SyntaxError: invalid syntax. Perhaps you forgot a comma?</span><span class="hljs-comment"># be careful to the comma &quot;,&quot; !!!</span><span class="hljs-comment"># my own test </span>my_phone_number_is = <span class="hljs-number">19923281341</span>my_qq_number_is = <span class="hljs-number">2734972186</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;my_phone_number_is&quot;</span> ,my_phone_number_is)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;my_qq_number_is&quot;</span> , my_qq_number_is)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;what if my qq minus phone&quot;</span>, my_qq_number_is - my_phone_number_is ,<span class="hljs-string">&quot;interesting !&quot;</span>)</code></pre><pre><code class="hljs apache"><span class="hljs-attribute">there</span> are <span class="hljs-number">100</span> cars available.<span class="hljs-attribute">there</span> are only <span class="hljs-number">30</span> drivers available.<span class="hljs-attribute">there</span> will be <span class="hljs-number">70</span> empty cars today.<span class="hljs-attribute">we</span> can transport <span class="hljs-number">120</span>.<span class="hljs-number">0</span> people today.<span class="hljs-attribute">we</span> have <span class="hljs-number">90</span> to carpool today.<span class="hljs-attribute">we</span> need to put about <span class="hljs-number">3</span>.<span class="hljs-number">0</span> in each car.<span class="hljs-attribute">my_phone_number_is</span> <span class="hljs-number">19923281341</span><span class="hljs-attribute">my_qq_number_is</span> <span class="hljs-number">2734972186</span><span class="hljs-attribute">what</span> if my qq minus phone -<span class="hljs-number">17188309155</span> interesting !</code></pre><h2 id="5-print-f”-“"><a href="#5-print-f”-“" class="headerlink" title="5. print(f” “)"></a>5. print(f” “)</h2><pre><code class="hljs python"><span class="hljs-comment"># this is my own message</span>my_name = <span class="hljs-string">&#x27;yl&#x27;</span>my_age = <span class="hljs-number">23</span>             <span class="hljs-comment"># years old </span>my_height = <span class="hljs-number">165</span>         <span class="hljs-comment"># centimeters</span>my_weight = <span class="hljs-number">95</span>          <span class="hljs-comment"># half of kilogram</span>my_eyes = <span class="hljs-string">&#x27;black&#x27;</span>my_teeth = <span class="hljs-string">&#x27;white&#x27;</span>my_hair = <span class="hljs-string">&#x27;yellow&#x27;</span><span class="hljs-comment"># let me introduce myself here</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;let&#x27;s talk about <span class="hljs-subst">&#123;my_name&#125;</span>.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;he&#x27;s <span class="hljs-subst">&#123;my_weight&#125;</span> half of kilogram heavy.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;he&#x27;s <span class="hljs-subst">&#123;my_height&#125;</span> centimeters tall.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;he&#x27;s got <span class="hljs-subst">&#123;my_eyes&#125;</span> eyes and <span class="hljs-subst">&#123;my_hair&#125;</span> hair.&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;his teeth are usually <span class="hljs-subst">&#123;my_teeth&#125;</span> depending on the coffee.&quot;</span>)<span class="hljs-comment"># this is one kind of calculation just for fun</span>total = my_age + my_height + my_weight<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;if I add <span class="hljs-subst">&#123;my_age&#125;</span>, <span class="hljs-subst">&#123;my_height&#125;</span>, <span class="hljs-subst">&#123;my_weight&#125;</span>, I get <span class="hljs-subst">&#123;total&#125;</span>.&quot;</span>)<span class="hljs-comment"># my own test one</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;this program is just for showing how long I stayed in the world&quot;</span>)years = <span class="hljs-number">23</span> days = <span class="hljs-number">365</span> * yearshours = <span class="hljs-number">24</span> * daysminutes = <span class="hljs-number">60</span> * hoursseconds = <span class="hljs-number">60</span> * minutes<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;I stayed in the world for <span class="hljs-subst">&#123;years&#125;</span> years, that is <span class="hljs-subst">&#123;days&#125;</span> days, the same as <span class="hljs-subst">&#123;hours&#125;</span> hours, equall to <span class="hljs-subst">&#123;minutes&#125;</span> minutes, just <span class="hljs-subst">&#123;seconds&#125;</span> seconds, now I still struggle for myself !&quot;</span>)<span class="hljs-comment"># my own test two</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;this program is just for converting the units&quot;</span>)height_cm = <span class="hljs-number">165</span>height_dm = <span class="hljs-number">165</span>/<span class="hljs-number">10</span>height_m = <span class="hljs-number">165</span>/<span class="hljs-number">100.0</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;my height is <span class="hljs-subst">&#123;height_cm&#125;</span> cm ,equall to <span class="hljs-subst">&#123;height_m&#125;</span> m or <span class="hljs-subst">&#123;height_dm&#125;</span> dm&quot;</span>)</code></pre><pre><code class="hljs pgsql">let<span class="hljs-string">&#x27;s talk about yl.</span><span class="hljs-string">he&#x27;</span>s <span class="hljs-number">95</span> half <span class="hljs-keyword">of</span> kilogram heavy.h<span class="hljs-string">e&#x27;s 165 centimeters tall.</span><span class="hljs-string">he&#x27;</span>s got black eyes <span class="hljs-keyword">and</span> yellow hair.his teeth are usually white depending <span class="hljs-keyword">on</span> the coffee.<span class="hljs-keyword">if</span> I <span class="hljs-keyword">add</span> <span class="hljs-number">23</span>, <span class="hljs-number">165</span>, <span class="hljs-number">95</span>, I <span class="hljs-keyword">get</span> <span class="hljs-number">283.</span>this program <span class="hljs-keyword">is</span> just <span class="hljs-keyword">for</span> showing how long I stayed <span class="hljs-keyword">in</span> the worldI stayed <span class="hljs-keyword">in</span> the world <span class="hljs-keyword">for</span> <span class="hljs-number">23</span> years, that <span class="hljs-keyword">is</span> <span class="hljs-number">8395</span> days, the same <span class="hljs-keyword">as</span> <span class="hljs-number">201480</span> hours, equall <span class="hljs-keyword">to</span> <span class="hljs-number">12088800</span> minutes, just <span class="hljs-number">725328000</span> seconds, now I still struggle <span class="hljs-keyword">for</span> myself !this program <span class="hljs-keyword">is</span> just <span class="hljs-keyword">for</span> converting the unitsmy height <span class="hljs-keyword">is</span> <span class="hljs-number">165</span> cm ,equall <span class="hljs-keyword">to</span> <span class="hljs-number">1.65</span> m <span class="hljs-keyword">or</span> <span class="hljs-number">16.5</span> dm</code></pre><h2 id="6-f与-format"><a href="#6-f与-format" class="headerlink" title="6. f与.format"></a>6. f与.format</h2><pre><code class="hljs python"><span class="hljs-comment"># define the variables : type_of_people </span>types_of_people = <span class="hljs-number">10</span><span class="hljs-comment"># define the string</span>x = <span class="hljs-string">f&quot;there are <span class="hljs-subst">&#123;types_of_people&#125;</span> types of people.&quot;</span><span class="hljs-comment"># define the variables : binary &amp;&amp; do_not</span>binary = <span class="hljs-string">&quot;binary&quot;</span>do_not = <span class="hljs-string">&quot;don&#x27;t&quot;</span><span class="hljs-comment"># define the string</span>y = <span class="hljs-string">f&quot;those who know <span class="hljs-subst">&#123;binary&#125;</span> and those who <span class="hljs-subst">&#123;do_not&#125;</span>.&quot;</span><span class="hljs-comment"># print the two strings x &amp;&amp; y</span><span class="hljs-built_in">print</span>(x)<span class="hljs-built_in">print</span>(y)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;I said: <span class="hljs-subst">&#123;x&#125;</span>&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;I also said: &#x27;<span class="hljs-subst">&#123;y&#125;</span>&#x27;&quot;</span>)<span class="hljs-comment"># define and print the variables : hilarious &amp;&amp; joke_evaluation</span>hilarious = <span class="hljs-literal">False</span>joke_evaluation = <span class="hljs-string">&quot;Isn&#x27;t that joke so funny ?! &#123;&#125;&quot;</span><span class="hljs-built_in">print</span>(joke_evaluation.<span class="hljs-built_in">format</span>(hilarious))<span class="hljs-comment"># define the two strings w &amp;&amp; e</span>w = <span class="hljs-string">&quot;this is the left side of ... &quot;</span>e = <span class="hljs-string">&quot;a string with a right side.&quot;</span><span class="hljs-comment"># added the two strings and print it</span><span class="hljs-built_in">print</span>(w + e)<span class="hljs-comment"># my own test one</span>a = <span class="hljs-string">&quot;I &quot;</span>b = <span class="hljs-string">&quot;really &quot;</span>c = <span class="hljs-string">&quot;love &quot;</span>d = <span class="hljs-string">&quot;you &quot;</span>f = <span class="hljs-string">&quot;for &quot;</span>e = <span class="hljs-string">&quot;5 &quot;</span>g = <span class="hljs-string">&quot;years&quot;</span>s = <span class="hljs-string">&quot; ! &quot;</span>x = <span class="hljs-string">f&quot;how I aspire to be your half one , <span class="hljs-subst">&#123;a&#125;</span><span class="hljs-subst">&#123;b&#125;</span><span class="hljs-subst">&#123;c&#125;</span><span class="hljs-subst">&#123;d&#125;</span><span class="hljs-subst">&#123;f&#125;</span><span class="hljs-subst">&#123;e&#125;</span><span class="hljs-subst">&#123;g&#125;</span> !&quot;</span><span class="hljs-built_in">print</span>(x)<span class="hljs-built_in">print</span>(a + b + c + d + f + e + g + s)<span class="hljs-comment"># my own test two</span>h = <span class="hljs-number">6</span>i = <span class="hljs-string">f&quot;I can just say <span class="hljs-subst">&#123;h&#125;</span><span class="hljs-subst">&#123;h&#125;</span><span class="hljs-subst">&#123;h&#125;</span>&quot;</span>j = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;x&#125;</span> ,oh what the fuck ! <span class="hljs-subst">&#123;i&#125;</span> ~ xswl&quot;</span> <span class="hljs-built_in">print</span>(j)</code></pre><pre><code class="hljs vhdl">there are <span class="hljs-number">10</span> types <span class="hljs-keyword">of</span> people.those who know binary <span class="hljs-keyword">and</span> those who don<span class="hljs-symbol">&#x27;t</span>.I said: there are <span class="hljs-number">10</span> types <span class="hljs-keyword">of</span> people.I also said: <span class="hljs-symbol">&#x27;those</span> who know binary <span class="hljs-keyword">and</span> those who don<span class="hljs-symbol">&#x27;t</span>.&#x27;Isn<span class="hljs-symbol">&#x27;t</span> that joke so funny ?! <span class="hljs-literal">False</span>this <span class="hljs-keyword">is</span> the left <span class="hljs-literal">side</span> <span class="hljs-keyword">of</span> ... a <span class="hljs-built_in">string</span> <span class="hljs-keyword">with</span> a right <span class="hljs-literal">side</span>.how I aspire <span class="hljs-keyword">to</span> be your half one , I really love you <span class="hljs-keyword">for</span> <span class="hljs-number">5</span> years !I really love you <span class="hljs-keyword">for</span> <span class="hljs-number">5</span> years !how I aspire <span class="hljs-keyword">to</span> be your half one , I really love you <span class="hljs-keyword">for</span> <span class="hljs-number">5</span> years ! ,oh what the fuck ! I can just say <span class="hljs-number">666</span> ~ xswl</code></pre><h2 id="7-print和-format"><a href="#7-print和-format" class="headerlink" title="7. print和{}.format()"></a>7. print和{}.format()</h2><pre><code class="hljs python"><span class="hljs-comment"># how to add different varialbes and print them in total</span><span class="hljs-comment"># how to mutiply the mark &quot;#&quot; * 10 to print ##########</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Mary had a little lamb.&quot;</span>)<span class="hljs-comment"># using &#123;&#125; with .format(&#x27;snow&#x27;) to realize printing the word snow</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Its fleece was white as &#123;&#125;.&quot;</span> .<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;snow&#x27;</span>))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;And everywhere that Mary went.&quot;</span>)<span class="hljs-comment"># put out ten points just like this : ..........</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;.&quot;</span> * <span class="hljs-number">10</span>) <span class="hljs-comment"># define different variables</span>end1 = <span class="hljs-string">&quot;C&quot;</span>end2 = <span class="hljs-string">&quot;h&quot;</span>end3 = <span class="hljs-string">&quot;e&quot;</span>end4 = <span class="hljs-string">&quot;s&quot;</span>end5 = <span class="hljs-string">&quot;s&quot;</span>end6 = <span class="hljs-string">&quot;e&quot;</span>end7 = <span class="hljs-string">&quot;B&quot;</span>end8 = <span class="hljs-string">&quot;u&quot;</span>end9 = <span class="hljs-string">&quot;r&quot;</span>end10 = <span class="hljs-string">&quot;g&quot;</span>end11 = <span class="hljs-string">&quot;e&quot;</span>end12 = <span class="hljs-string">&quot;r&quot;</span><span class="hljs-comment"># the existence of end=&#x27; &#x27; at the end.</span><span class="hljs-built_in">print</span>(end1 + end2 + end3 + end4 + end5 + end6, end=<span class="hljs-string">&#x27; &#x27;</span>)<span class="hljs-built_in">print</span>(end7 + end8 + end9 + end10 + end11 + end12)<span class="hljs-comment"># none existence of end=&#x27; &#x27; at the end.</span><span class="hljs-built_in">print</span>(end1 + end2 + end3 + end4 + end5 + end6)<span class="hljs-built_in">print</span>(end7 + end8 + end9 + end10 + end11 + end12)<span class="hljs-comment"># my own test one</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;every time I feel &#123;&#125;.&quot;</span> .<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;painful&#x27;</span>))x = <span class="hljs-string">f&quot;choose to bear on my own &quot;</span>y = <span class="hljs-string">&quot;than &quot;</span>z = <span class="hljs-string">&quot;talk to others &quot;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;I would rather <span class="hljs-subst">&#123;x&#125;</span><span class="hljs-subst">&#123;y&#125;</span><span class="hljs-subst">&#123;z&#125;</span>&quot;</span>)<span class="hljs-comment"># my own test two</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>)m = <span class="hljs-string">&quot;don&#x27;t be worry &quot;</span>n = <span class="hljs-string">&quot;I will cheer up right now &quot;</span>k = <span class="hljs-string">&#x27;!&#x27;</span> * <span class="hljs-number">3</span><span class="hljs-built_in">print</span>(m + k, end=<span class="hljs-string">&#x27; &#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;as the matter of fact &quot;</span>)<span class="hljs-built_in">print</span>(m + k, end=<span class="hljs-string">&#x27; &#x27;</span>)<span class="hljs-built_in">print</span>(n + k)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>)<span class="hljs-comment"># error : forgot to distinguish the difference between end=&#x27;&#x27; &amp;&amp; end=&#x27; &#x27;.</span><span class="hljs-comment"># error : forgot &lt;f&gt; , &lt;&quot;&quot;&gt; , &lt;&#123;&#125;&gt; when I prepare for referencing variables : f&quot;this is &#123;a&#125;&quot;</span></code></pre><pre><code class="hljs coffeescript">Mary had a little lamb.Its fleece was white <span class="hljs-keyword">as</span> snow.And everywhere that Mary went...........Chesse BurgerChesseBurger<span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span><span class="hljs-comment">every time I feel painful.</span><span class="hljs-comment">I would rather choose to bear on my own than talk to others</span><span class="hljs-comment">###</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span>don<span class="hljs-string">&#x27;t be worry !!! as the matter of fact</span><span class="hljs-string">don&#x27;</span>t be worry !!! I will cheer up right now !!!<span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span></code></pre><h2 id="8-同时打印多个参数"><a href="#8-同时打印多个参数" class="headerlink" title="8. 同时打印多个参数"></a>8. 同时打印多个参数</h2><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># define an new function called &lt;formatter&gt; , it&#x27;s used for passing arguments </span>formatter = <span class="hljs-string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span><span class="hljs-comment"># create sets of string that every set concludes four arguments ,and use the formatter function to print them</span><span class="hljs-built_in">print</span>(formatter.<span class="hljs-built_in">format</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<span class="hljs-built_in">print</span>(formatter.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;one&quot;</span>, <span class="hljs-string">&quot;two&quot;</span>, <span class="hljs-string">&quot;three&quot;</span>, <span class="hljs-string">&quot;four&quot;</span>))<span class="hljs-built_in">print</span>(formatter.<span class="hljs-built_in">format</span>(<span class="hljs-literal">True</span>, <span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>, <span class="hljs-literal">True</span>))<span class="hljs-built_in">print</span>(formatter.<span class="hljs-built_in">format</span>(formatter, formatter, formatter, formatter))<span class="hljs-built_in">print</span>(formatter.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;try your&quot;</span>, <span class="hljs-string">&quot;own text here&quot;</span>, <span class="hljs-string">&quot;maybe a poem&quot;</span>, <span class="hljs-string">&quot;or a song about fear&quot;</span>))     <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># my own test one : practice the using of y.format()</span>x = <span class="hljs-literal">True</span>y = <span class="hljs-string">&quot;go ahead , what you say is &#123;&#125;&quot;</span><span class="hljs-built_in">print</span>(y.<span class="hljs-built_in">format</span>(x))<span class="hljs-comment"># my own  test two : practice the using of x=&#123;&#125;&#123;&#125;&#123;&#125; + y.format(, , ,)</span>m = <span class="hljs-string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>n = <span class="hljs-string">f&quot;of course , everything that spoke from your mouth is&quot;</span>k = <span class="hljs-string">&#x27; &#x27;</span><span class="hljs-built_in">print</span>(n + k + m.<span class="hljs-built_in">format</span>(<span class="hljs-literal">True</span> , <span class="hljs-literal">True</span> , <span class="hljs-literal">True</span>))<span class="hljs-built_in">print</span>(n + k + m.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;true&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>))<span class="hljs-comment"># my own test three : practice the using of  * y.format&#123;&#125;</span>s = <span class="hljs-string">&#x27;sb &#x27;</span>b = <span class="hljs-string">&quot;actually , that is what I wanna say &#123;&#125;&quot;</span><span class="hljs-built_in">print</span>(b.<span class="hljs-built_in">format</span>(s) + s * <span class="hljs-number">5</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># IndexError: Replacement index 1 out of range for positional arguments tuple !  (unmatched number of argumants)</span><span class="hljs-comment"># SyntaxError: unterminated string literal !                                     (unstopped string, error from &lt;&quot;&gt;)</span><span class="hljs-comment"># NameError: name &#x27;true&#x27; is not defined. Did you mean:&#x27;True&#x27;?                    (error from &lt;true&gt; &amp;&amp; &lt;True&gt;)</span><span class="hljs-comment"># SyntaxError: f-string: empty expression not allowed !!!!!!!</span><span class="hljs-comment"># error from : don&#x27;t use the expression that includes nothing                    (error from b = &lt;f&gt;)     </span></code></pre><pre><code class="hljs clean">###########################################################################<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span>one two three four<span class="hljs-literal">True</span> <span class="hljs-literal">False</span> <span class="hljs-literal">False</span> <span class="hljs-literal">True</span>&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;try your own text here maybe a poem or a song about fear###########################################################################go ahead , what you say is <span class="hljs-literal">True</span><span class="hljs-keyword">of</span> course , everything that spoke <span class="hljs-keyword">from</span> your mouth is <span class="hljs-literal">True</span> <span class="hljs-literal">True</span> <span class="hljs-literal">True</span><span class="hljs-keyword">of</span> course , everything that spoke <span class="hljs-keyword">from</span> your mouth is true true trueactually , that is what I wanna say sb sb sb sb sb sb###########################################################################</code></pre><h2 id="9-多行注释和换行"><a href="#9-多行注释和换行" class="headerlink" title="9. 多行注释和换行"></a>9. 多行注释和换行</h2><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># here&#x27;s some new strange stuff, remember type it exactly.</span>days = <span class="hljs-string">&quot;Mon Tue Wen Thu Fri Sat Sun&quot;</span>months = <span class="hljs-string">&quot;\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug&quot;</span>  <span class="hljs-comment"># &lt;\n&gt; means shift</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;here are the days: &quot;</span>, days)backspace = <span class="hljs-string">&#x27; &#x27;</span><span class="hljs-built_in">print</span>(backspace)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;here are the months: &quot;</span>, months)<span class="hljs-comment"># there&#x27;s something going on here</span><span class="hljs-comment"># with the three double-quotes &lt;&quot;&quot;&quot;&gt;</span><span class="hljs-comment"># we&#x27;ll be able to type as much as we like, even 4,5,6...... lines </span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;&quot; </span><span class="hljs-string">there&#x27;s something going on here. </span><span class="hljs-string">with the three double-quotes. </span><span class="hljs-string">we&#x27;ll be able to type as much as we like.</span><span class="hljs-string">even 4 lines if we want ,or 5 , or 6.&quot;&quot;&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># my own test one (test &lt;&quot;&quot;&quot;&gt;)</span><span class="hljs-comment"># print(&quot;this is</span><span class="hljs-comment">#                very funny&quot;)</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;&quot;this is</span><span class="hljs-string">                 very interesting &quot;&quot;&quot;</span> )<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># SyntaxError: unterminated string literal (detected at line 26) </span><span class="hljs-comment"># error from unstopped string (clear to see the difference between &lt;&quot;&gt; and &lt;&quot;&quot;&quot;&gt;)</span></code></pre><pre><code class="hljs coffeescript"><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span><span class="hljs-comment">here are the days:  Mon Tue Wen Thu Fri Sat Sun</span><span class="hljs-comment"></span><span class="hljs-comment">here are the months:</span><span class="hljs-comment">Jan</span><span class="hljs-comment">Feb</span><span class="hljs-comment">Mar</span><span class="hljs-comment">Apr</span><span class="hljs-comment">May</span><span class="hljs-comment">Jun</span><span class="hljs-comment">Jul</span><span class="hljs-comment">Aug</span><span class="hljs-comment"></span><span class="hljs-comment">there&#x27;s something going on here.</span><span class="hljs-comment">with the three double-quotes.</span><span class="hljs-comment">we&#x27;ll be able to type as much as we like.</span><span class="hljs-comment">even 4 lines if we want ,or 5 , or 6.</span><span class="hljs-comment">###</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span>this <span class="hljs-keyword">is</span>                 very interesting<span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span></code></pre><h2 id="10-转义字符"><a href="#10-转义字符" class="headerlink" title="10. 转义字符"></a>10. 转义字符</h2><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span>tabby_cat = <span class="hljs-string">&quot;\tI&#x27;m tabbed in.&quot;</span>           <span class="hljs-comment"># &lt;\t&gt; : tab</span>persian_cat = <span class="hljs-string">&quot;I&#x27;m split\non a line.&quot;</span>    <span class="hljs-comment"># &lt;\n&gt; : escape lines</span>backslash_cat = <span class="hljs-string">&quot;I&#x27;m \\ a \\ cat.&quot;</span>       <span class="hljs-comment"># &lt;\\&gt; : \</span>fat_cat = <span class="hljs-string">&quot;&quot;&quot;                            </span><span class="hljs-string">I&#x27;ll do a list:</span><span class="hljs-string">\t* cat food</span><span class="hljs-string">\t* fishied</span><span class="hljs-string">\t* catnip\n\t* grass &quot;&quot;&quot;</span>                <span class="hljs-comment"># &lt;&quot;&quot;&quot;&gt; : code multiple lines</span><span class="hljs-built_in">print</span>(tabby_cat)<span class="hljs-built_in">print</span>(persian_cat)<span class="hljs-built_in">print</span>(backslash_cat)<span class="hljs-built_in">print</span>(fat_cat)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># look at the difference between &lt;\&#x27;&gt; and &lt;\&quot;&gt;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I am 6&#x27;2\&quot; tall.&quot;</span>)               <span class="hljs-comment"># escape double-quote inside string</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;I am 6\&#x27;2&quot; tall.&#x27;</span>)               <span class="hljs-comment"># escape single-quote inside string</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># my own test one </span>a = <span class="hljs-string">&quot; when to have a haircut ? I \a ask myself ...&quot;</span>    <span class="hljs-comment"># ASCII bell</span>b = <span class="hljs-string">&quot; when to have a haircut ? I \b ask myself ...&quot;</span>    <span class="hljs-comment"># ASCII backspace</span>c = <span class="hljs-string">&quot; when to have a haircut ? I \f ask myself ...&quot;</span>    <span class="hljs-comment"># ASCII formfeed</span>d = <span class="hljs-string">&quot; when to have a haircut ? I \r ask myself ...&quot;</span>    <span class="hljs-comment"># Carriage return</span>e = <span class="hljs-string">&quot; when to have a haircut ? I \v ask myself ...&quot;</span>    <span class="hljs-comment"># ASCII vertical tab</span><span class="hljs-built_in">print</span>(a)<span class="hljs-built_in">print</span>(b)<span class="hljs-built_in">print</span>(c)<span class="hljs-built_in">print</span>(d)<span class="hljs-built_in">print</span>(e)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># my own test two</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;&#x27;here I wanna distinguish</span><span class="hljs-string">escape sequences \&#x27;\&#x27;\&#x27; from \&quot;\&quot;\&quot; </span><span class="hljs-string">and how to use them naturally &#x27;&#x27;&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;&quot;here I wanna distinguish</span><span class="hljs-string">escape sequences \&#x27;\&#x27;\&#x27; from \&quot;\&quot;\&quot; </span><span class="hljs-string">and how to use them naturally &quot;&quot;&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># my own test three</span>time = <span class="hljs-string">&quot;waste time&quot;</span>yeah = <span class="hljs-string">&quot;&quot;&quot;after the test </span><span class="hljs-string">I find that there is nothing difference</span><span class="hljs-string">between  \&#x27;\&#x27;\&#x27; and \&quot;\&quot;\&quot;;</span><span class="hljs-string">when I decide to use one of them to code multiple lines,</span><span class="hljs-string">I would not &#123;&#125; any more to choose which one is better !&quot;&quot;&quot;</span><span class="hljs-comment"># be attention to use &lt;f&gt; when the strings contain &#123;variables&#125; that you defined before</span>two = <span class="hljs-number">2</span>ok = <span class="hljs-string">f&quot;About <span class="hljs-subst">&#123;two&#125;</span> tests have been executed successfully!\n&quot;</span>  shift = <span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-built_in">print</span>(yeah.<span class="hljs-built_in">format</span>(time))<span class="hljs-built_in">print</span>(shift + ok + yeah.<span class="hljs-built_in">format</span>(time))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;#&quot;</span> * <span class="hljs-number">75</span>) <span class="hljs-comment">#####</span><span class="hljs-comment"># SyntaxError: f-string: empty expression not allowed &lt;error from wrong use of f&gt;</span><span class="hljs-comment"># Traceback (most recent call last): KeyError: &#x27;time&#x27; &lt;error from .format(ok)&gt;</span></code></pre><pre><code class="hljs coffeescript"><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span><span class="hljs-comment">        I&#x27;m tabbed in.</span><span class="hljs-comment">I&#x27;m split</span><span class="hljs-comment">on a line.</span><span class="hljs-comment">I&#x27;m \ a \ cat.</span><span class="hljs-comment"></span><span class="hljs-comment">I&#x27;ll do a list:</span><span class="hljs-comment">        * cat food</span><span class="hljs-comment">        * fishied</span><span class="hljs-comment">        * catnip</span><span class="hljs-comment">        * grass</span><span class="hljs-comment">###</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span>I am <span class="hljs-number">6</span><span class="hljs-string">&#x27;2&quot; tall.</span><span class="hljs-string">I am 6&#x27;</span><span class="hljs-number">2</span><span class="hljs-string">&quot; tall.</span><span class="hljs-string">###########################################################################</span><span class="hljs-string"> when to have a haircut ? I  ask myself ...</span><span class="hljs-string"> when to have a haircut ? I ask myself ...</span><span class="hljs-string"> when to have a haircut ? I</span><span class="hljs-string">                             ask myself ...</span><span class="hljs-string"> ask myself ... haircut ? I</span><span class="hljs-string"> when to have a haircut ? I</span><span class="hljs-string">                             ask myself ...</span><span class="hljs-string">###########################################################################</span><span class="hljs-string">here I wanna distinguish</span><span class="hljs-string">escape sequences &#x27;&#x27;&#x27; from &quot;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-keyword">and</span> how to use them naturallyhere I wanna distinguish<span class="hljs-built_in">escape</span> sequences <span class="hljs-string">&#x27;&#x27;&#x27; from &quot;&quot;&quot;</span><span class="hljs-string">and how to use them naturally</span><span class="hljs-string">###########################################################################</span><span class="hljs-string">after the test</span><span class="hljs-string">I find that there is nothing difference</span><span class="hljs-string">between  &#x27;&#x27;&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;&quot;&quot;;</span><span class="hljs-string">when I decide to use one of them to code multiple lines,</span><span class="hljs-string">I would not waste time any more to choose which one is better !</span><span class="hljs-string"></span><span class="hljs-string">About 2 tests have been executed successfully!</span><span class="hljs-string">after the test</span><span class="hljs-string">I find that there is nothing difference</span><span class="hljs-string">between  &#x27;&#x27;&#x27; and &quot;&quot;&quot;</span>;<span class="hljs-keyword">when</span> I decide to use one <span class="hljs-keyword">of</span> them to code multiple lines,I would <span class="hljs-keyword">not</span> waste time any more to choose which one <span class="hljs-keyword">is</span> better !<span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">###</span></code></pre><p><em>教程参考：learn python the hard way</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="python" scheme="https://uncleleiy.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://uncleleiy.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>hexo 配置问题</title>
    <link href="https://uncleleiy.github.io/2023/06/10/blog-3-hexo-debug/"/>
    <id>https://uncleleiy.github.io/2023/06/10/blog-3-hexo-debug/</id>
    <published>2023-06-10T13:00:00.000Z</published>
    <updated>2023-07-10T11:28:21.473Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="本地hexo无响应"><a href="#本地hexo无响应" class="headerlink" title="本地hexo无响应"></a>本地hexo无响应</h1><h2 id="输入-hexo-g-amp-amp-hexo-s"><a href="#输入-hexo-g-amp-amp-hexo-s" class="headerlink" title="输入 hexo g &amp;&amp; hexo s"></a>输入 hexo g &amp;&amp; hexo s</h2><pre><code class="hljs asciidoc">Usage: hexo &lt;command&gt;&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</code></pre><p>周而复始一直没办法执行命令，不知道hexo搞什么去了</p><p>个人猜测是我移动了package-lock.json  package.jso  db.json的位置</p><p>更改位置之后出现新的问题:</p><pre><code class="hljs subunit"><span class="hljs-keyword">ERROR </span>Cannot find module &#x27;hexo&#x27; from &#x27;/home/uncle_yang/blog&#x27;<span class="hljs-keyword">ERROR </span>Local hexo loading failed in ~/blog<span class="hljs-keyword">ERROR </span>Try running: &#x27;rm -rf node_modules &amp;&amp; npm install --force&#x27;</code></pre><h2 id="输入-rm-rf-node-modules-amp-amp-npm-install-–force"><a href="#输入-rm-rf-node-modules-amp-amp-npm-install-–force" class="headerlink" title="输入 rm -rf node_modules &amp;&amp; npm install –force"></a>输入 rm -rf node_modules &amp;&amp; npm install –force</h2><p>再执行hexo命令就解决问题了</p><h2 id="新增解决方法"><a href="#新增解决方法" class="headerlink" title="新增解决方法"></a>新增解决方法</h2><p>需要进入blog目录下，而不要在具体某个文件夹下去执行hexo的命令</p><h2 id="复盘（1）"><a href="#复盘（1）" class="headerlink" title="复盘（1）"></a>复盘（1）</h2><p>文件之类的东西务必时刻记住备份！备份！备份！！！</p><h2 id="复盘（2）"><a href="#复盘（2）" class="headerlink" title="复盘（2）"></a>复盘（2）</h2><p>遇到问题先看终端的报错信息，然后分析问题，看能不能解决；不行的话，复制报错信息到【谷歌】和【必应】，不要用辣鸡【百度】，查看相关解决办法！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="debug" scheme="https://uncleleiy.github.io/categories/debug/"/>
    
    
    <category term="hexo" scheme="https://uncleleiy.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>linux 基础命令</title>
    <link href="https://uncleleiy.github.io/2023/06/07/blog-2-linux-vasp/"/>
    <id>https://uncleleiy.github.io/2023/06/07/blog-2-linux-vasp/</id>
    <published>2023-06-07T11:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux命令行"><a href="#linux命令行" class="headerlink" title="linux命令行"></a>linux命令行</h1><h2 id="1-做计算常用的linux命令"><a href="#1-做计算常用的linux命令" class="headerlink" title="1.做计算常用的linux命令"></a>1.做计算常用的linux命令</h2><pre><code class="hljs bash"><span class="hljs-comment"># convert the format between windows and linux</span>$ dos2linux INCAR  <span class="hljs-comment"># using of grep : quilk positioning for the information you wanna know</span>$ <span class="hljs-built_in">ls</span> Fe*Fe_GW: POTCAR  Fe_pv: POTCAR  $ grep ZVAL Fe*/POTCARFe_GW/POTCAR:   POMASS =   55.847; ZVAL   =    8.000    mass and valenzFe_pv/POTCAR:   POMASS =   55.847; ZVAL   =   14.000    mass and valenz<span class="hljs-comment"># some basic commands of linux used in the first principle calculation</span>$ <span class="hljs-built_in">ls</span>$ <span class="hljs-built_in">cd</span>$ <span class="hljs-built_in">pwd</span>               <span class="hljs-comment"># show the local directory : /home/lei/exvasp</span>$ man <span class="hljs-built_in">cat</span>           <span class="hljs-comment"># cat --help</span>$ <span class="hljs-built_in">cat</span>  INCAR -n$ more INCAR$ grep EMAX POTCAR$ <span class="hljs-built_in">mkdir</span> exvasp_dir$ <span class="hljs-built_in">touch</span> exvasp_file $ <span class="hljs-built_in">cp</span> file1 file2    <span class="hljs-comment"># cp ~/exvasp/file1 . = cp /home/lei/exvasp/file1 /home/lei/exvasp</span>$ <span class="hljs-built_in">mv</span> exvasp exqe    <span class="hljs-comment"># mv ~/exvasp ~/exqe  </span>$ <span class="hljs-built_in">mkdir</span> exvasp &amp;&amp; <span class="hljs-built_in">cd</span> exvasp &amp;&amp; <span class="hljs-built_in">touch</span> file1$ <span class="hljs-built_in">pwd</span>               <span class="hljs-comment"># print the local directory : /home/lei/exvasp/file1 = ~/exvasp/file1</span>$ tree              <span class="hljs-comment"># print the directory structure just like tree</span>$ <span class="hljs-built_in">tail</span> OUTCAR -n 6  <span class="hljs-comment"># print the last 6 lines</span>$ <span class="hljs-built_in">head</span> OUTCAR -n 6  <span class="hljs-comment"># print the head 6 lines</span></code></pre><h2 id="2-vasp文件简介"><a href="#2-vasp文件简介" class="headerlink" title="2.vasp文件简介"></a>2.vasp文件简介</h2><pre><code class="hljs tap"><span class="hljs-comment"># all files from vasp calculation list below</span>INCAR      in     **STOPCAR    instout      outPOTCAR     in     **KPOINTS    in     **IBZKPT     outPOSCAR     in     **CONTCAR    outCHGCAR     in/outCHG        outWAVECAR    in/outTMPCAR     in/outEIGENVAL   outDOSCAR     outPROCAR     outOSZICAR    outPCDAT      outXDATCAR    outLOCPOT     outELFCAR     outPROOUT     out<span class="hljs-comment"># four files must be prepared for vasp : INCAR KPOINTS POTCAR POSCAR</span><span class="hljs-comment"># three files that contain a lot of information generated from vasp : CONTCAR OUTCAR OSZICAR</span>``` <span class="hljs-comment">### 2.1.vasp的三个重要输出文件</span>```bash<span class="hljs-comment"># After calculated successfully ,three files generated from vasp : CONTCAR OUTCAR OSZICAR</span><span class="hljs-comment"># CONTCAR</span><span class="hljs-comment"># CONTCAR : store the structural information that the model has been optimized  </span><span class="hljs-comment"># be attention to back up the file when the calculation was broken down ! ! !</span><span class="hljs-comment"># some differences between POSCAR and CONTCAR list below </span>$ cat -n POSCAR     1O atom in a box      21.0                 38.0 0.0 0.0        40.0 8.0 0.0       50.0 0.0 8.0      6O               71              8Cartesian     90<span class="hljs-number"> 0 </span>0  $ cat -n CONTCAR     1O atom in a box                              2   1.00000000000000          3     8.0000000000000000    0.0000000000000000    0.0000000000000000     4     0.0000000000000000    8.0000000000000000    0.0000000000000000     5     0.0000000000000000    0.0000000000000000    8.0000000000000000     6   O      7     1     8Direct     9  0.0000000000000000  0.0000000000000000  0.0000000000000000    10     11  0.00000000E+00  0.00000000E+00  0.00000000E+00<span class="hljs-comment"># OSZICAR</span><span class="hljs-comment"># OSZICAR : store the convergence speed information about the current step  </span><span class="hljs-comment"># N : iterations of the electronic structure</span><span class="hljs-comment"># 1 : iterations of geometric structure optimizations</span><span class="hljs-comment"># E0 : equall to energy (sigma-&gt;0) from OUTCAR . this parameter is important ! ! !</span>$ cat OSZICAR       N       E                     dE             d eps       ncg     rms          rms（c）DAV:  <span class="hljs-number"> 1 </span>    0.324969965196E+02    0.32497E+02   -0.10270E+03   <span class="hljs-number"> 48 </span>  0.977E+01DAV:  <span class="hljs-number"> 2 </span>    0.501749892771E+00   -0.31995E+02   -0.31995E+02   <span class="hljs-number"> 72 </span>  0.202E+01DAV:  <span class="hljs-number"> 3 </span>   -0.182605770767E-01   -0.52001E+00   -0.50521E+00   <span class="hljs-number"> 48 </span>  0.521E+00DAV:  <span class="hljs-number"> 4 </span>   -0.203547758465E-01   -0.20942E-02   -0.20860E-02   <span class="hljs-number"> 96 </span>  0.333E-01DAV:  <span class="hljs-number"> 5 </span>   -0.203547873947E-01   -0.11548E-07   -0.11210E-07   <span class="hljs-number"> 48 </span>  0.844E-04    0.307E-01DAV:  <span class="hljs-number"> 6 </span>   -0.213726161828E-01   -0.10178E-02   -0.17884E-03   <span class="hljs-number"> 48 </span>  0.111E-01    0.155E-01DAV:  <span class="hljs-number"> 7 </span>   -0.214708381542E-01   -0.98222E-04   -0.23522E-04   <span class="hljs-number"> 48 </span>  0.459E-02  <span class="hljs-number"> 1 </span>F= -.21470838E-01 E0= -.13757722E-01  d E =-.154262E-01 <span class="hljs-comment"># OUTCAR</span><span class="hljs-comment"># some useful commands to find the important information you want to know</span>$ grep POTCAR OUTCAR$ grep TIT OUTCAR$ grep ENMAX OUTCAR$ grep ZVAL OUTCAR                <span class="hljs-comment"># seek the number of valence electronic</span>$ grep irreducible OUTCAR         <span class="hljs-comment"># seek the number of k points</span>$ grep E-fermi OUTCAR     $ grep sigma OUTCAR | tail -n<span class="hljs-number"> 1 </span>  <span class="hljs-comment"># E0 = energy(sigma-&gt;0)</span></code></pre><h3 id="2-2-vasp的四个必备输入文件"><a href="#2-2-vasp的四个必备输入文件" class="headerlink" title="2.2.vasp的四个必备输入文件"></a>2.2.vasp的四个必备输入文件</h3><pre><code class="hljs bash"><span class="hljs-comment"># four files must be prepared for vasp : INCAR KPOINTS POTCAR POSCAR ,here are some examples</span><span class="hljs-comment"># INCAR : the easier ,the better ,don&#x27;t put parameters that unknown in the INCAR file </span><span class="hljs-comment"># INCAR example for oxygen </span>SYSTEM = O atom       ISMEAR = 0            SIGMA = 0.01        <span class="hljs-comment"># KPOINTS example for oxygen</span>K-POINTS0Gamma1 1 10 0 0  <span class="hljs-comment"># POSCAR example for oxygen</span>O atom <span class="hljs-keyword">in</span> a box1.0 8.0 0.0 0.00.0 8.0 0.00.0 0.0 8.0O1cartesian0 0 0<span class="hljs-comment"># POTCAR example for oxygen</span>PAW_PBE Fe 06Sep20008.00000000000000000parameters from PSCTR are:  VRHFIN =Fe:  d7 s1  LEXCH  = PE  EATOM  =   594.4687 eV,   43.6922 Ry  TITEL  = PAW_PBE Fe 06Sep2000  LULTRA =        F    use ultrasoft PP ?  IUNSCR =        1    unscreen: 0-lin 1-nonlin 2-no  RPACOR =    2.000    partial core radius  POMASS =   55.847; ZVAL   =    8.000    mass and valenz  RCORE  =    2.300    outmost cutoff radius  RWIGS  =    2.460; RWIGS  =    1.302    wigner-seitz radius (au A)  ENMAX  =  267.883; ENMIN  =  200.912 eV  RCLOC  =    1.701    cutoff <span class="hljs-keyword">for</span> <span class="hljs-built_in">local</span> pot  LCOR   =        T    correct aug charges  LPAW   =        T    paw PP  EAUG   =  511.368  DEXC   =    -.022  RMAX   =    2.817    core radius <span class="hljs-keyword">for</span> proj-oper  RAUG   =    1.300    <span class="hljs-built_in">factor</span> <span class="hljs-keyword">for</span> augmentation sphere  RDEP   =    2.442    radius <span class="hljs-keyword">for</span> radial grids  QCUT   =   -4.437; QGAM   =    8.874    optimization parameters</code></pre><h2 id="3-用于批量处理的for循环体"><a href="#3-用于批量处理的for循环体" class="headerlink" title="3.用于批量处理的for循环体"></a>3.用于批量处理的for循环体</h2><pre><code class="hljs bash"><span class="hljs-comment"># for loop : batch processing for data</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..9&#125; ; <span class="hljs-keyword">do</span> <span class="hljs-built_in">cp</span> file_0 file_<span class="hljs-variable">$i</span> -r ; <span class="hljs-keyword">done</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;a..z&#125; ; <span class="hljs-keyword">do</span> <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$i</span> ; <span class="hljs-keyword">done</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;A..Z&#125; ; <span class="hljs-keyword">do</span> <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$i</span> &amp;&amp; <span class="hljs-built_in">rmdir</span> <span class="hljs-variable">$i</span> ; <span class="hljs-keyword">done</span></code></pre><h3 id="3-1-vasp四个输入文件的批量化处理"><a href="#3-1-vasp四个输入文件的批量化处理" class="headerlink" title="3.1.vasp四个输入文件的批量化处理"></a>3.1.vasp四个输入文件的批量化处理</h3><pre><code class="hljs bash"><span class="hljs-comment"># batch processing for vasp files : INCAR KPOINTS POTCAR POSCAR</span><span class="hljs-comment"># POTCAR</span><span class="hljs-comment"># combined three POTCARs from different directories into one</span>$ <span class="hljs-built_in">cat</span> ~/pot/Al/POTCAR ~/pot/C/POTCAR ~/pot/H/POTCAR &gt; POTCAR<span class="hljs-comment"># INCAR </span><span class="hljs-comment"># using sed to convert the value of INCAR directly (1)  </span>$ sed <span class="hljs-string">&#x27;3s/0.01/0.02/g&#x27;</span> INCAR &gt; INCAR_NEW$ <span class="hljs-built_in">cat</span> INCAR_NEW -n<span class="hljs-built_in">mv</span> INCAR_NEW INCAR<span class="hljs-comment"># using sed to convert the value directly (2)</span>$ sed <span class="hljs-string">&#x27;3s/0.01/0.02/g&#x27;</span> INCAR $ <span class="hljs-built_in">cat</span> INCAR -n $ sed <span class="hljs-string">&#x27;3s/0.01/0.02/g&#x27;</span> -i INCAR <span class="hljs-comment"># revise the value of INCAR with batch processing </span>$ <span class="hljs-built_in">ls</span>0.01  0.02  0.03  0.04  0.05  $ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> *; <span class="hljs-keyword">do</span> sed -i <span class="hljs-string">&quot;3s/0.05/<span class="hljs-variable">$i</span>/g&quot;</span> <span class="hljs-variable">$i</span>/INCAR ; <span class="hljs-keyword">done</span><span class="hljs-comment"># for i in * = for i in &#123;0.01 0.02 0.03 0.04 0.05&#125;, be attention to the &quot; </span>$ grep SIGMA */INCAR0.01/INCAR:SIGMA = 0.010.02/INCAR:SIGMA = 0.020.03/INCAR:SIGMA = 0.030.04/INCAR:SIGMA = 0.040.05/INCAR:SIGMA = 0.05<span class="hljs-comment"># KPOINTS</span><span class="hljs-comment"># revise the KPOINTS with batch processing (1)</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..5&#125; ; <span class="hljs-keyword">do</span> <span class="hljs-built_in">cp</span> ~/exvasp/000 <span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span> -r ; <span class="hljs-keyword">done</span>$ <span class="hljs-built_in">ls</span> 111 222 333 444 555$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..5&#125;; <span class="hljs-keyword">do</span> sed -i <span class="hljs-string">&quot;4s/1 1 1/<span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span>/g&quot;</span> <span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span>/KPOINTS ; <span class="hljs-keyword">done</span><span class="hljs-comment"># revise the KPOINTS with batch processing (2)</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..6&#125;; <span class="hljs-keyword">do</span> sed -i <span class="hljs-string">&#x27;4s/1 1 1/$i $i $i/g&#x27;</span> <span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span>/KPOINTS ; <span class="hljs-keyword">done</span>$ <span class="hljs-built_in">cat</span> ~/exvasp/111/KPOINTS K-POINTS  0  Gamma<span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span>0 0 0 <span class="hljs-comment"># be attention to the &quot; and &#x27; , using \$i instead of $i to convert back</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..6&#125; ; <span class="hljs-keyword">do</span> sed -i <span class="hljs-string">&quot;s/\$i \$i \$i/<span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span>/g&quot;</span> $i$i<span class="hljs-variable">$i</span>/KPOINTS ; <span class="hljs-keyword">done</span><span class="hljs-comment"># POSCAR</span><span class="hljs-comment"># revise the POSCAR with batch processing</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(<span class="hljs-built_in">seq</span> 8 2 16); <span class="hljs-keyword">do</span> <span class="hljs-built_in">cp</span> -r ~/POSCAR <span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span> ; <span class="hljs-keyword">done</span>$ <span class="hljs-built_in">ls</span>888 101010  121212  141414  161616<span class="hljs-comment"># for i in $(seq 8 2 6) = for i in &#123;8 10 12 14 16&#125;</span>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(<span class="hljs-built_in">seq</span> 8 2 16) ; <span class="hljs-keyword">do</span> sed -i <span class="hljs-string">&quot;3,5s/8/<span class="hljs-variable">$i</span>/g&quot;</span> <span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span><span class="hljs-variable">$&#123;i&#125;</span>/POSCAR ; <span class="hljs-keyword">done</span><span class="hljs-comment"># show the details of the POSCAR</span>$ <span class="hljs-built_in">cat</span> ~/101010/POSACR O atom <span class="hljs-keyword">in</span> a box 1.0            10.0 0.0 0.0   0.0 10.0 0.0  0.0 0.0 10.0 O          1         Cartesian0 0 0</code></pre><p><em>References：<a target="_blank" rel="noopener" href="https://www.bigbrosci.com/">https://www.bigbrosci.com/</a></em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="linux" scheme="https://uncleleiy.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://uncleleiy.github.io/tags/linux/"/>
    
    <category term="vasp" scheme="https://uncleleiy.github.io/tags/vasp/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 基础语法</title>
    <link href="https://uncleleiy.github.io/2023/06/06/blog-1-markdown/"/>
    <id>https://uncleleiy.github.io/2023/06/06/blog-1-markdown/</id>
    <published>2023-06-06T07:00:00.000Z</published>
    <updated>2023-07-10T06:01:40.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown-简介"><a href="#Markdown-简介" class="headerlink" title="Markdown 简介"></a>Markdown 简介</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，使用该语法编写的文档可以导出 HTML 、Word、PDF、Epub 等多种格式的文档。</p><h2 id="1-Markdown-标题格式"><a href="#1-Markdown-标题格式" class="headerlink" title="1.Markdown 标题格式"></a>1.Markdown 标题格式</h2><pre><code class="hljs clean"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="2-Markdown-字体"><a href="#2-Markdown-字体" class="headerlink" title="2.Markdown 字体"></a>2.Markdown 字体</h2><pre><code class="hljs markdown"><span class="hljs-emphasis">*斜体*</span><span class="hljs-strong">**粗体**</span><span class="hljs-strong">**<span class="hljs-emphasis">*粗斜体*</span>**</span></code></pre><p><em>斜体</em><br><strong>粗体</strong><br><strong><em>粗斜体</em></strong></p><h2 id="3-Markdown-无序列表"><a href="#3-Markdown-无序列表" class="headerlink" title="3.Markdown 无序列表"></a>3.Markdown 无序列表</h2><pre><code class="hljs asciidoc"><span class="hljs-bullet">* </span>第一项<span class="hljs-bullet">* </span>第二项<span class="hljs-bullet">* </span>第三项</code></pre><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><h2 id="4-Markdown-有序列表"><a href="#4-Markdown-有序列表" class="headerlink" title="4.Markdown 有序列表"></a>4.Markdown 有序列表</h2><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 第一项<span class="hljs-bullet">2.</span> 第二项<span class="hljs-bullet">3.</span> 第三项</code></pre><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h2 id="5-Markdown-列表嵌套"><a href="#5-Markdown-列表嵌套" class="headerlink" title="5.Markdown 列表嵌套"></a>5.Markdown 列表嵌套</h2><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 第一项：<span class="hljs-bullet">    *</span> 第一项嵌套的第一个元素<span class="hljs-bullet">    *</span> 第一项嵌套的第二个元素<span class="hljs-bullet">2.</span> 第二项：<span class="hljs-bullet">    *</span> 第二项嵌套的第一个元素<span class="hljs-bullet">    *</span> 第二项嵌套的第二个元素</code></pre><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h2 id="6-Markdown-区块"><a href="#6-Markdown-区块" class="headerlink" title="6.Markdown 区块"></a>6.Markdown 区块</h2><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号</p><h3 id="6-1-Markdown-区块"><a href="#6-1-Markdown-区块" class="headerlink" title="6.1.Markdown 区块"></a>6.1.Markdown 区块</h3><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">区块引用</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">简单示例</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">注意区分它们之间的差别</span></code></pre><blockquote><p>区块引用<br>简单示例<br>注意区分它们之间的差别</p></blockquote><h3 id="6-2-Markdown-区块嵌套"><a href="#6-2-Markdown-区块嵌套" class="headerlink" title="6.2.Markdown 区块嵌套"></a>6.2.Markdown 区块嵌套</h3><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">最外层</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">&gt; 第一层嵌套</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">&gt; &gt; 第二层嵌套</span></code></pre><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><h3 id="6-3-Markdown-区块中使用列表"><a href="#6-3-Markdown-区块中使用列表" class="headerlink" title="6.3.Markdown 区块中使用列表"></a>6.3.Markdown 区块中使用列表</h3><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">区块中使用列表</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-number">1.</span> 第一项</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-number">2.</span> 第二项</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">* 第一项</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">* 第二项</span><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">* 第三项</span></code></pre><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><h3 id="6-4-Markdown-列表中使用区块"><a href="#6-4-Markdown-列表中使用区块" class="headerlink" title="6.4.Markdown 列表中使用区块"></a>6.4.Markdown 列表中使用区块</h3><pre><code class="hljs asciidoc"><span class="hljs-bullet">* </span>第一项<span class="hljs-code">    &gt; 简单示例</span><span class="hljs-code">    &gt; 注意区分其差别</span><span class="hljs-bullet">* </span>第二项</code></pre><ul><li>第一项<blockquote><p>简单示例<br>注意区分其差别</p></blockquote></li><li>第二项</li></ul><h2 id="7-Markdown-代码"><a href="#7-Markdown-代码" class="headerlink" title="7.Markdown 代码"></a>7.Markdown 代码</h2><pre><code class="hljs autohotkey">`function()` # 使用``实现代码输入或者直接使用tab<span class="hljs-comment">;</span># 使用```开始```结尾可以实现多行代码输入<span class="hljs-comment">;</span></code></pre><h2 id="8-Markdown-链接"><a href="#8-Markdown-链接" class="headerlink" title="8.Markdown 链接"></a>8.Markdown 链接</h2><pre><code class="hljs scss"><span class="hljs-selector-attr">[链接名称]</span>(链接地址)&lt;链接地址&gt;</code></pre><p>个人网页 <a href="https://uncleleiy.github.io/">Uncle_yang</a><br>个人网页 (<a href="https://uncleleiy.github.io/">https://uncleleiy.github.io/</a>)</p><h2 id="9-Markdown-图片"><a href="#9-Markdown-图片" class="headerlink" title="9.Markdown 图片"></a>9.Markdown 图片</h2><pre><code class="hljs awk">![xswl 图标](https:<span class="hljs-regexp">//u</span>ncleleiy.github.io<span class="hljs-regexp">/medias/</span>kao.gif <span class="hljs-string">&quot;xswl&quot;</span>)</code></pre><p><img src="https://uncleleiy.github.io/medias/kao.gif" alt="xswl 图标" title="xswl"></p><h2 id="10-Markdown-表格"><a href="#10-Markdown-表格" class="headerlink" title="10.Markdown 表格"></a>10.Markdown 表格</h2><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行；</p><pre><code class="hljs gherkin">|<span class="hljs-string">  表头   </span>|<span class="hljs-string"> 表头  </span>||<span class="hljs-string">  ----  </span>|<span class="hljs-string"> ----  </span>||<span class="hljs-string"> 单元格  </span>|<span class="hljs-string"> 单元格 </span>||<span class="hljs-string"> 单元格  </span>|<span class="hljs-string"> 单元格 </span>|</code></pre><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>表格对齐方式；</p><p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p><pre><code class="hljs gherkin">|<span class="hljs-string"> 左对齐 </span>|<span class="hljs-string"> 右对齐 </span>|<span class="hljs-string"> 居中对齐 </span>||<span class="hljs-string"> :-----</span>|<span class="hljs-string"> ----: </span>|<span class="hljs-string"> :----: </span>||<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>||<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|</code></pre><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h2 id="11-Markdown-转义字符"><a href="#11-Markdown-转义字符" class="headerlink" title="11.Markdown 转义字符"></a>11.Markdown 转义字符</h2><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号</p><pre><code class="hljs markdown">\   反斜线`   反引号<span class="hljs-bullet">*</span>   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号<span class="hljs-section">#   井字号</span><span class="hljs-bullet">+</span>   加号<span class="hljs-bullet">-</span>   减号.   英文句点!   感叹号</code></pre><p>示例：</p><pre><code class="hljs asciidoc"><span class="hljs-strong">**文本加粗**</span> \*\* 正常显示星号 \*\*</code></pre><p><strong>文本加粗</strong><br>** 正常显示星号 **</p><p><em>Reference: <a target="_blank" rel="noopener" href="https://www.runoob.com/markdown/md-tutorial.html">https://www.runoob.com/markdown/md-tutorial.html</a></em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="grammar" scheme="https://uncleleiy.github.io/categories/grammar/"/>
    
    
    <category term="Markdown" scheme="https://uncleleiy.github.io/tags/Markdown/"/>
    
  </entry>
  
</feed>
